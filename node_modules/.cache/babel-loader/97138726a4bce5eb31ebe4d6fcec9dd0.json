{"ast":null,"code":"import Transform from './Transform';\nimport Vector3 from './math/Vector3'; // TODO: Add a Script component for game object logic\n// TODO: Linear interpolation for transforms (translation and rotation)\n// TODO: Implement visible and interactable local coordinate system for game objects\n\nclass GameObject {\n  constructor(name) {\n    this.nameTag = name;\n    this.meshes = [];\n    this.parent = null;\n    this.children = [];\n    this.transform = new Transform();\n  }\n\n  get position() {\n    return this.transform.position;\n  }\n\n  get rotation() {\n    return this.transform.rotation;\n  }\n\n  get scale() {\n    return this.transform.scaling;\n  }\n\n  setNameTag(name) {\n    this.nameTag = name;\n  }\n\n  translate(val) {\n    this.transform.translate([val[0], val[1], val[2]]);\n\n    for (let i = 0; i < this.meshes.length; ++i) {\n      this.meshes[i].transform.setParent(this.transform);\n    }\n\n    if (this.children.length > 0) {\n      for (let j = 0; j < this.children.length; ++j) {\n        this.children[j].translate([val[0], val[1], val[2]]);\n      }\n    }\n  }\n\n  setPosition(pos) {\n    if (this.children.length > 0) {\n      for (let j = 0; j < this.children.length; ++j) {\n        let p = Vector3.subtract(this.transform.position, new Vector3(pos));\n        this.children[j].translate([p.x, p.y, p.z]);\n      }\n    }\n\n    this.transform.setPosition(pos);\n\n    for (let i = 0; i < this.meshes.length; ++i) {\n      this.meshes[i].transform.setParent(this.transform);\n    }\n  }\n\n  setRotation(rot) {\n    this.transform.setRotation(rot);\n\n    for (let i = 0; i < this.meshes.length; ++i) {\n      this.meshes[i].transform.setParent(this.transform);\n    }\n  }\n\n  setScale(scale) {\n    this.transform.setScale(scale);\n\n    for (let i = 0; i < this.meshes.length; ++i) {\n      this.meshes[i].transform.setParent(this.transform);\n    }\n  }\n\n  addMesh(mesh) {\n    mesh.transform.setParent(this.transform);\n    this.meshes.push(mesh);\n  }\n\n  addChild(gameObject) {\n    this.children.push(gameObject);\n  }\n\n  addCollider(newCollider) {}\n\n  render(shader) {\n    for (let i = 0; i < this.meshes.length; ++i) {\n      this.meshes[i].render(shader);\n    }\n  }\n\n}\n\nexport default GameObject;","map":{"version":3,"sources":["G:\\DOKUMENT\\Projekt\\React\\BlueBox\\client\\src\\js\\bluebox\\GameObject.js"],"names":["Transform","Vector3","GameObject","constructor","name","nameTag","meshes","parent","children","transform","position","rotation","scale","scaling","setNameTag","translate","val","i","length","setParent","j","setPosition","pos","p","subtract","x","y","z","setRotation","rot","setScale","addMesh","mesh","push","addChild","gameObject","addCollider","newCollider","render","shader"],"mappings":"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","sourcesContent":["import Transform from './Transform';\r\nimport Vector3 from './math/Vector3';\r\n\r\n// TODO: Add a Script component for game object logic\r\n// TODO: Linear interpolation for transforms (translation and rotation)\r\n// TODO: Implement visible and interactable local coordinate system for game objects\r\n\r\nclass GameObject {\r\n    constructor (name) {\r\n        this.nameTag = name;\r\n        this.meshes = [];\r\n        this.parent = null;\r\n        this.children = [];\r\n        this.transform = new Transform();\r\n    }\r\n\r\n    get position() {\r\n        return this.transform.position;\r\n    }\r\n\r\n    get rotation() {\r\n        return this.transform.rotation;\r\n    }\r\n\r\n    get scale() {\r\n        return this.transform.scaling;\r\n    }\r\n\r\n    setNameTag(name) {\r\n        this.nameTag = name;\r\n    }\r\n\r\n    translate (val) {\r\n        this.transform.translate([val[0], val[1], val[2]]);\r\n\r\n        for (let i = 0; i < this.meshes.length; ++i) {\r\n            this.meshes[i].transform.setParent(this.transform);\r\n        }\r\n\r\n        if (this.children.length > 0) {\r\n            for (let j = 0; j < this.children.length; ++j) {\r\n                this.children[j].translate([val[0], val[1], val[2]]);\r\n            }\r\n        }\r\n    }\r\n\r\n    setPosition(pos) {\r\n        if (this.children.length > 0) {\r\n            for (let j = 0; j < this.children.length; ++j) {\r\n                let p = Vector3.subtract(this.transform.position, new Vector3(pos));\r\n                this.children[j].translate([p.x, p.y, p.z]);\r\n            }\r\n        }\r\n\r\n        this.transform.setPosition(pos);\r\n\r\n        for (let i = 0; i < this.meshes.length; ++i) {\r\n            this.meshes[i].transform.setParent(this.transform);\r\n        }\r\n    }\r\n\r\n    setRotation(rot) {\r\n        this.transform.setRotation(rot);\r\n\r\n        for (let i = 0; i < this.meshes.length; ++i) {\r\n            this.meshes[i].transform.setParent(this.transform);\r\n        }\r\n    }\r\n\r\n    setScale(scale) {\r\n        this.transform.setScale(scale);\r\n\r\n        for (let i = 0; i < this.meshes.length; ++i) {\r\n            this.meshes[i].transform.setParent(this.transform);\r\n        }\r\n    }\r\n\r\n    addMesh (mesh) {\r\n        mesh.transform.setParent(this.transform);\r\n        this.meshes.push(mesh);\r\n    }\r\n\r\n    addChild (gameObject) {\r\n        this.children.push(gameObject);\r\n    }\r\n\r\n    addCollider (newCollider) {\r\n\r\n    }\r\n\r\n    render(shader) {\r\n        for (let i = 0; i < this.meshes.length; ++i) {\r\n            this.meshes[i].render(shader);\r\n        }\r\n    }\r\n}\r\n\r\nexport default GameObject;"]},"metadata":{},"sourceType":"module"}