{"ast":null,"code":"import Matrix4 from './math/Matrix4';\nimport Vector3 from './math/Vector3';\n\nclass Transform {\n  constructor() {\n    this.position = new Vector3([0.0, 0.0, 0.0]);\n    this.rotation = new Vector3([0.0, 0.0, 0.0]);\n    this.scaling = new Vector3([1.0, 1.0, 1.0]);\n    this.matrix = Matrix4.identity();\n    this.parent = null;\n  }\n\n  clone() {\n    let clone = new Transform();\n    clone.setPosition([this.position.x, this.position.y, this.position.z]);\n    clone.setScale([this.scaling.x, this.scaling.y, this.scaling.z]);\n    clone.setRotation([this.rotation.x, this.rotation.y, this.rotation.z]);\n    clone.setParent(this.parent);\n    return clone;\n  }\n\n  setScale(scale) {\n    this.scaling.set(scale);\n    this.composeMatrix();\n  }\n\n  setPosition(position) {\n    this.position.set(position);\n    this.composeMatrix();\n  }\n\n  setRotation(rotation) {\n    this.rotation.set(rotation);\n    this.composeMatrix();\n  }\n\n  translate(val) {\n    let rightVec = new Vector3([this.matrix[0] * val[0], this.matrix[4] * val[0], this.matrix[8] * val[0]]);\n    let upVec = new Vector3([this.matrix[1] * val[1], this.matrix[5] * val[1], this.matrix[9] * val[1]]);\n    let forwardVec = new Vector3([this.matrix[2] * val[2], this.matrix[6] * val[2], this.matrix[10] * val[2]]);\n    this.setPosition([this.position.x - rightVec.x / this.scaling.x + upVec.x / this.scaling.x + forwardVec.x / this.scaling.x, this.position.y + rightVec.y / this.scaling.y - upVec.y / this.scaling.y + forwardVec.y / this.scaling.y, this.position.z + rightVec.z / this.scaling.z + upVec.z / this.scaling.z - forwardVec.z / this.scaling.z]);\n  }\n\n  setParent(parentTransform) {\n    this.parent = parentTransform;\n    this.composeMatrix();\n  }\n\n  inverted() {\n    return Matrix4.invert(this.matrix, this.matrix);\n  }\n\n  composeMatrix() {\n    let scaleMatrix = Matrix4.scaling(this.scaling.x, this.scaling.y, this.scaling.z);\n    let rotationMatrix = Matrix4.rotateZ(Matrix4.identity(), this.rotation.z * Math.PI / 180);\n    rotationMatrix = Matrix4.rotateX(rotationMatrix, this.rotation.x * Math.PI / 180);\n    rotationMatrix = Matrix4.rotateY(rotationMatrix, this.rotation.y * Math.PI / 180);\n    let translationMatrix = Matrix4.translation(this.position.x, this.position.y, this.position.z);\n    this.matrix = Matrix4.multiply(rotationMatrix, scaleMatrix);\n    this.matrix = Matrix4.multiply(translationMatrix, this.matrix);\n\n    if (this.parent) {\n      this.matrix = Matrix4.multiply(this.parent.matrix, this.matrix);\n    }\n  }\n\n}\n\nexport default Transform;","map":{"version":3,"sources":["G:\\DOKUMENT\\Projekt\\React\\BlueBox\\client\\src\\js\\bluebox\\Transform.js"],"names":["Matrix4","Vector3","Transform","constructor","position","rotation","scaling","matrix","identity","parent","clone","setPosition","x","y","z","setScale","setRotation","setParent","scale","set","composeMatrix","translate","val","rightVec","upVec","forwardVec","parentTransform","inverted","invert","scaleMatrix","rotationMatrix","rotateZ","Math","PI","rotateX","rotateY","translationMatrix","translation","multiply"],"mappings":"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","sourcesContent":["import Matrix4 from './math/Matrix4';\r\nimport Vector3 from './math/Vector3';\r\n\r\nclass Transform {\r\n    constructor() {\r\n        this.position = new Vector3([0.0, 0.0, 0.0]);\r\n        this.rotation = new Vector3([0.0, 0.0, 0.0]);\r\n        this.scaling = new Vector3([1.0, 1.0, 1.0]);\r\n\r\n        this.matrix = Matrix4.identity();\r\n        this.parent = null;\r\n    }\r\n\r\n    clone() {\r\n        let clone = new Transform();\r\n        clone.setPosition([this.position.x, this.position.y, this.position.z]);\r\n        clone.setScale([this.scaling.x, this.scaling.y, this.scaling.z]);\r\n        clone.setRotation([this.rotation.x, this.rotation.y, this.rotation.z]);\r\n        clone.setParent(this.parent);\r\n        return clone;\r\n    }\r\n\r\n    setScale(scale) {\r\n        this.scaling.set(scale);\r\n        this.composeMatrix();\r\n    }\r\n\r\n    setPosition(position) {\r\n        this.position.set(position);\r\n        this.composeMatrix();\r\n    }\r\n\r\n    setRotation (rotation) {\r\n        this.rotation.set(rotation);\r\n        this.composeMatrix();\r\n    }\r\n\r\n    translate(val) {\r\n        let rightVec = new Vector3([this.matrix[0]*val[0], this.matrix[4]*val[0], this.matrix[8]*val[0]]);\r\n        let upVec = new Vector3([this.matrix[1]*val[1], this.matrix[5]*val[1], this.matrix[9]*val[1]]);\r\n        let forwardVec = new Vector3([this.matrix[2]*val[2], this.matrix[6]*val[2], this.matrix[10]*val[2]]);\r\n\r\n        this.setPosition([\r\n            this.position.x - rightVec.x/this.scaling.x + upVec.x/this.scaling.x + forwardVec.x/this.scaling.x,\r\n            this.position.y + rightVec.y/this.scaling.y - upVec.y/this.scaling.y + forwardVec.y/this.scaling.y,\r\n            this.position.z + rightVec.z/this.scaling.z + upVec.z/this.scaling.z - forwardVec.z/this.scaling.z,\r\n        ]);\r\n    }\r\n\r\n    setParent(parentTransform) {\r\n        this.parent = parentTransform;\r\n        this.composeMatrix();\r\n    }\r\n\r\n    inverted () {\r\n        return Matrix4.invert(this.matrix, this.matrix);\r\n    }\r\n\r\n    composeMatrix () {\r\n        let scaleMatrix = Matrix4.scaling(this.scaling.x, this.scaling.y, this.scaling.z);\r\n        let rotationMatrix = Matrix4.rotateZ(Matrix4.identity(), (this.rotation.z*Math.PI/180));\r\n        rotationMatrix = Matrix4.rotateX(rotationMatrix, (this.rotation.x*Math.PI/180));\r\n        rotationMatrix = Matrix4.rotateY(rotationMatrix, (this.rotation.y*Math.PI/180));\r\n        let translationMatrix = Matrix4.translation(this.position.x, this.position.y, this.position.z);\r\n\r\n        this.matrix = Matrix4.multiply(rotationMatrix, scaleMatrix);\r\n        this.matrix = Matrix4.multiply(translationMatrix, this.matrix);\r\n\r\n        if (this.parent) {\r\n            this.matrix = Matrix4.multiply(this.parent.matrix, this.matrix);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Transform;"]},"metadata":{},"sourceType":"module"}