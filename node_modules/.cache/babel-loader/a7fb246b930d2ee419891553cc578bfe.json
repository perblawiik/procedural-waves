{"ast":null,"code":"var _jsxFileName = \"G:\\\\DOKUMENT\\\\Projekt\\\\React\\\\Waves\\\\procedural-waves\\\\src\\\\js\\\\bluebox\\\\gui\\\\SidePanel.js\";\nimport React, { Component } from 'react';\nimport ConnectionManager from \"../ConnectionManager\";\n\nclass SidePanel extends Component {\n  setNewValue(id) {\n    let newValue;\n\n    if (id === this.props.colorTag) {\n      // Color values must be between 0.0 and 1.0\n      let r = this.clamp(parseFloat(document.getElementById('r-color').value) / 255.0, 0.0, 1.0);\n      let g = this.clamp(parseFloat(document.getElementById('g-color').value) / 255.0, 0.0, 1.0);\n      let b = this.clamp(parseFloat(document.getElementById('b-color').value) / 255.0, 0.0, 1.0);\n      newValue = {\n        r,\n        g,\n        b\n      };\n    } else {\n      newValue = parseFloat(document.getElementById(id).value);\n    }\n\n    ConnectionManager.setItemValue(id, newValue);\n    ConnectionManager.sendSignal(id);\n  }\n\n  handleKeyPress(id, target) {\n    const ENTER = 13; //If enter is pressed click submit button with given id.\n\n    if (target.charCode === ENTER) {\n      document.getElementById(id).click();\n    }\n  }\n\n  clamp(val, min, max) {\n    if (val > max) return max;else if (val < min) return min;\n    return val;\n  }\n\n  render() {\n    const containerStyle = {\n      backgroundColor: '#2a2d38',\n      width: this.props.width,\n      textAlign: 'center',\n      overflow: 'auto'\n    };\n    const titleStyle = {\n      color: 'white',\n      fontSize: '2em'\n    };\n    const textStyle = {\n      color: 'white',\n      fontSize: '1.0em'\n    };\n    const inputStyle = {\n      marginLeft: 10,\n      width: 40\n    };\n    const settingContainerStyle = {\n      paddingBottom: 5\n    };\n    const rangeWidth = 175; // Displays the value as integer\n\n    let formatInputValue = function (val, radix) {\n      return parseInt(val, radix);\n    };\n\n    let waterColor = ConnectionManager.getItemValue(this.props.colorTag);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"side-panel\",\n      style: containerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: titleStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, \"PARAMETERS\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: settingContainerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: textStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"Amplitude\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: rangeWidth\n      },\n      id: this.props.amplitudeTag,\n      type: \"range\",\n      min: \"0.0\",\n      max: \"10.0\",\n      step: \"0.1\",\n      defaultValue: ConnectionManager.getItemValue(this.props.amplitudeTag),\n      onChange: this.setNewValue.bind(this, this.props.amplitudeTag),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: settingContainerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: textStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, \"Wave Length\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: rangeWidth\n      },\n      id: this.props.waveLengthTag,\n      type: \"range\",\n      min: \"5.0\",\n      max: \"100.0\",\n      step: \"1.0\",\n      defaultValue: ConnectionManager.getItemValue(this.props.waveLengthTag),\n      onChange: this.setNewValue.bind(this, this.props.waveLengthTag),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: settingContainerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: textStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, \"Speed\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: rangeWidth\n      },\n      id: this.props.speedTag,\n      type: \"range\",\n      min: \"0.0\",\n      max: \"20.0\",\n      step: \"0.1\",\n      defaultValue: ConnectionManager.getItemValue(this.props.speedTag),\n      onChange: this.setNewValue.bind(this, this.props.speedTag),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: settingContainerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: textStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, \"Sharpness\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: rangeWidth\n      },\n      id: this.props.sharpnessTag,\n      type: \"range\",\n      min: \"1.0\",\n      max: \"20.0\",\n      step: \"0.1\",\n      defaultValue: ConnectionManager.getItemValue(this.props.sharpnessTag),\n      onChange: this.setNewValue.bind(this, this.props.sharpnessTag),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: settingContainerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: textStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, \"Direction\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: rangeWidth\n      },\n      id: this.props.angleTag,\n      type: \"range\",\n      min: \"0.0\",\n      max: \"6.28318530718\",\n      step: \"0.06283185307\",\n      defaultValue: ConnectionManager.getItemValue(this.props.angleTag),\n      onChange: this.setNewValue.bind(this, this.props.angleTag),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: settingContainerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: textStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, \"Color\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: inputStyle,\n      id: \"r-color\",\n      type: \"number\",\n      step: \"1\",\n      min: \"0\",\n      max: \"255\",\n      onKeyPress: this.handleKeyPress.bind(this, 'submit-color'),\n      defaultValue: formatInputValue(waterColor.r * 255),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      style: inputStyle,\n      id: \"g-color\",\n      type: \"number\",\n      step: \"1.0\",\n      min: \"0.0\",\n      max: \"255.0\",\n      onKeyPress: this.handleKeyPress.bind(this, 'submit-color'),\n      defaultValue: formatInputValue(waterColor.g * 255),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      style: inputStyle,\n      id: \"b-color\",\n      type: \"number\",\n      step: \"1.0\",\n      min: \"0.0\",\n      max: \"255.0\",\n      onKeyPress: this.handleKeyPress.bind(this, 'submit-color'),\n      defaultValue: formatInputValue(waterColor.b * 255),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"submit-color\",\n      style: {\n        marginLeft: 10,\n        marginRight: 10,\n        cursor: 'pointer'\n      },\n      onClick: this.setNewValue.bind(this, this.props.colorTag),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default SidePanel;","map":{"version":3,"sources":["G:/DOKUMENT/Projekt/React/Waves/procedural-waves/src/js/bluebox/gui/SidePanel.js"],"names":["React","Component","ConnectionManager","SidePanel","setNewValue","id","newValue","props","colorTag","r","clamp","parseFloat","document","getElementById","value","g","b","setItemValue","sendSignal","handleKeyPress","target","ENTER","charCode","click","val","min","max","render","containerStyle","backgroundColor","width","textAlign","overflow","titleStyle","color","fontSize","textStyle","inputStyle","marginLeft","settingContainerStyle","paddingBottom","rangeWidth","formatInputValue","radix","parseInt","waterColor","getItemValue","amplitudeTag","bind","waveLengthTag","speedTag","sharpnessTag","angleTag","display","flexDirection","marginRight","cursor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport ConnectionManager from \"../ConnectionManager\";\r\n\r\nclass SidePanel extends Component {\r\n\r\n    setNewValue(id) {\r\n        let newValue;\r\n\r\n        if (id === this.props.colorTag) {\r\n            // Color values must be between 0.0 and 1.0\r\n            let r = this.clamp(parseFloat(document.getElementById('r-color').value)/255.0, 0.0, 1.0);\r\n            let g = this.clamp(parseFloat(document.getElementById('g-color').value)/255.0, 0.0, 1.0);\r\n            let b = this.clamp(parseFloat(document.getElementById('b-color').value)/255.0, 0.0, 1.0);\r\n\r\n            newValue = {r, g, b};\r\n        }\r\n        else {\r\n            newValue = parseFloat(document.getElementById(id).value);\r\n        }\r\n\r\n        ConnectionManager.setItemValue(id, newValue);\r\n        ConnectionManager.sendSignal(id);\r\n    }\r\n\r\n    handleKeyPress(id, target) {\r\n        const ENTER = 13;\r\n        //If enter is pressed click submit button with given id.\r\n        if (target.charCode === ENTER) {\r\n            document.getElementById(id).click();\r\n        }\r\n    }\r\n\r\n    clamp(val, min, max) {\r\n        if (val > max)\r\n            return max;\r\n        else if (val < min)\r\n            return min;\r\n\r\n        return val;\r\n    }\r\n\r\n    render() {\r\n\r\n        const containerStyle = {\r\n            backgroundColor: '#2a2d38',\r\n            width: this.props.width,\r\n            textAlign: 'center',\r\n            overflow: 'auto'\r\n        };\r\n\r\n        const titleStyle = {\r\n            color: 'white',\r\n            fontSize: '2em'\r\n        };\r\n\r\n        const textStyle = {\r\n            color: 'white',\r\n            fontSize: '1.0em'\r\n        };\r\n\r\n        const inputStyle = {\r\n            marginLeft: 10,\r\n            width: 40\r\n        };\r\n\r\n        const settingContainerStyle = {\r\n            paddingBottom: 5\r\n        };\r\n\r\n        const rangeWidth = 175;\r\n\r\n        // Displays the value as integer\r\n        let formatInputValue = function (val, radix) {\r\n            return parseInt(val, radix);\r\n        };\r\n\r\n        let waterColor = ConnectionManager.getItemValue(this.props.colorTag);\r\n\r\n        return (\r\n            <div id=\"side-panel\" style={containerStyle}>\r\n                <p style={titleStyle}>\r\n                   PARAMETERS\r\n               </p>\r\n\r\n                <div style={settingContainerStyle}>\r\n                    <p style={textStyle}>\r\n                        Amplitude\r\n                    </p>\r\n                    <input style={{width:rangeWidth}}\r\n                           id={this.props.amplitudeTag}\r\n                           type=\"range\"\r\n                           min=\"0.0\"\r\n                           max=\"10.0\"\r\n                           step=\"0.1\"\r\n                           defaultValue={ConnectionManager.getItemValue(this.props.amplitudeTag)}\r\n                           onChange={this.setNewValue.bind(this, this.props.amplitudeTag)}/>\r\n                </div>\r\n\r\n                <div style={settingContainerStyle}>\r\n                    <p style={textStyle}>\r\n                        Wave Length\r\n                    </p>\r\n                    <input style={{width:rangeWidth}}\r\n                           id={this.props.waveLengthTag}\r\n                           type=\"range\"\r\n                           min=\"5.0\"\r\n                           max=\"100.0\"\r\n                           step=\"1.0\"\r\n                           defaultValue={ConnectionManager.getItemValue(this.props.waveLengthTag)}\r\n                           onChange={this.setNewValue.bind(this, this.props.waveLengthTag)}/>\r\n                </div>\r\n\r\n                <div style={settingContainerStyle}>\r\n                    <p style={textStyle}>\r\n                        Speed\r\n                    </p>\r\n                    <input style={{width:rangeWidth}}\r\n                           id={this.props.speedTag}\r\n                           type=\"range\"\r\n                           min=\"0.0\"\r\n                           max=\"20.0\"\r\n                           step=\"0.1\"\r\n                           defaultValue={ConnectionManager.getItemValue(this.props.speedTag)}\r\n                           onChange={this.setNewValue.bind(this, this.props.speedTag)}/>\r\n                </div>\r\n\r\n                <div style={settingContainerStyle}>\r\n                    <p style={textStyle}>\r\n                        Sharpness\r\n                    </p>\r\n                    <input style={{width:rangeWidth}}\r\n                           id={this.props.sharpnessTag}\r\n                           type=\"range\"\r\n                           min=\"1.0\"\r\n                           max=\"20.0\"\r\n                           step=\"0.1\"\r\n                           defaultValue={ConnectionManager.getItemValue(this.props.sharpnessTag)}\r\n                           onChange={this.setNewValue.bind(this, this.props.sharpnessTag)}/>\r\n                </div>\r\n\r\n                <div style={settingContainerStyle}>\r\n                    <p style={textStyle}>\r\n                        Direction\r\n                    </p>\r\n                    <input style={{width:rangeWidth}}\r\n                           id={this.props.angleTag}\r\n                           type=\"range\"\r\n                           min=\"0.0\"\r\n                           max=\"6.28318530718\"\r\n                           step=\"0.06283185307\"\r\n                           defaultValue={ConnectionManager.getItemValue(this.props.angleTag)}\r\n                           onChange={this.setNewValue.bind(this, this.props.angleTag)}/>\r\n                </div>\r\n\r\n                <div style={settingContainerStyle}>\r\n                    <p style={textStyle}>\r\n                        Color\r\n                    </p>\r\n                    <div style={{display: 'flex', flexDirection: 'row'}}>\r\n\r\n                        <input style={inputStyle}\r\n                               id='r-color'\r\n                               type=\"number\"\r\n                               step='1'\r\n                               min='0'\r\n                               max='255'\r\n                               onKeyPress={this.handleKeyPress.bind(this, 'submit-color')}\r\n                               defaultValue={formatInputValue(waterColor.r*255)}/>\r\n\r\n                        <input style={inputStyle}\r\n                               id='g-color'\r\n                               type=\"number\"\r\n                               step='1.0'\r\n                               min='0.0'\r\n                               max='255.0'\r\n                               onKeyPress={this.handleKeyPress.bind(this, 'submit-color')}\r\n                               defaultValue={formatInputValue(waterColor.g*255)}/>\r\n\r\n                        <input style={inputStyle}\r\n                               id='b-color'\r\n                               type=\"number\"\r\n                               step='1.0'\r\n                               min='0.0'\r\n                               max='255.0'\r\n                               onKeyPress={this.handleKeyPress.bind(this, 'submit-color')}\r\n                               defaultValue={formatInputValue(waterColor.b*255)}/>\r\n                        <button id='submit-color' style={{marginLeft: 10, marginRight: 10, cursor: 'pointer'}} onClick={this.setNewValue.bind(this,this.props.colorTag)}>\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SidePanel;"]},"metadata":{},"sourceType":"module"}