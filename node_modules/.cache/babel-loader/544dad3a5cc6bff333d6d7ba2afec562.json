{"ast":null,"code":"var _jsxFileName = \"G:\\\\DOKUMENT\\\\Projekt\\\\React\\\\BlueBox\\\\client\\\\src\\\\js\\\\bluebox\\\\gui\\\\EngineWindow.js\";\nimport React, { Component } from 'react'; // CSS\n\nimport '../../../css/EngineWindow.css'; // JS\n\nimport Shader from '../Shader';\nimport Time from '../Time';\nimport Engine from '../Engine';\n\nclass EngineWindow extends Component {\n  constructor(props) {\n    super(props); // Initialize timing variables\n\n    this.fpsTimer = 0;\n    this.frameCount = 0;\n    this.fps = 0;\n    this.animationId = null;\n    this.engine = new Engine();\n  }\n\n  componentDidMount() {\n    this.engine.preload(this.props.width, this.props.height);\n    this.startMainLoop();\n  }\n\n  componentWillUnmount() {\n    this.stopMainLoop();\n  }\n\n  preload() {\n    // 2D Canvas for text display\n    this.canvas2D = document.getElementById('text-canvas');\n    this.ctx = this.canvas2D.getContext('2d');\n    this.ctx.font = \"20px Consolas\";\n    this.ctx.fillStyle = 'white'; // WebGL canvas\n\n    this.canvas = document.getElementById(\"gl-canvas\"); // Initialize the WebGL context\n\n    this.gl = this.canvas.getContext(\"webgl\"); // If WebGL isn't supported\n\n    if (!this.gl) {\n      console.log(\"WebGL is not supported\");\n      alert(\"Unable to initialize WebGL. Your browser or machine may not support it.\");\n      return 0;\n    }\n\n    this.gl.viewport(0, 0, this.canvas.width, this.canvas.height); // Set clear color to light blue, fully opaque\n\n    this.gl.clearColor(0.0, 0.40, 0.55, 1.0); // Enable depth so that triangles closer to the camera don't get overlapped by those further away\n\n    this.gl.enable(this.gl.DEPTH_TEST); // Only draw \"visible\" sides (memory saving)\n\n    this.gl.enable(this.gl.CULL_FACE);\n    this.gl.cullFace(this.gl.BACK);\n    this.gl.frontFace(this.gl.CCW);\n    this.mainShader = new Shader(this.canvas); //this.SetUpEventListeners();\n  }\n\n  startMainLoop() {\n    // Initiate the main loop\n    this.animationId = window.requestAnimationFrame(this.mainLoop.bind(this));\n  }\n\n  stopMainLoop() {\n    window.cancelAnimationFrame(this.animationId);\n    this.animationId = null;\n  }\n\n  mainLoop() {\n    this.animationId = window.requestAnimationFrame(this.mainLoop.bind(this));\n    this.engine.update();\n  }\n\n  render() {\n    const engine_container_style = {\n      display: 'flex',\n      flexDirection: 'column',\n      width: this.props.width\n    };\n    return React.createElement(\"div\", {\n      className: \"Engine-container\",\n      style: engine_container_style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: this.props.width,\n        height: this.props.height\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"gl-canvas\",\n      width: this.props.width,\n      height: this.props.height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Your browser does not support HTML5\"), React.createElement(\"canvas\", {\n      id: \"text-canvas\",\n      width: this.props.width,\n      height: this.props.height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default EngineWindow;","map":{"version":3,"sources":["G:\\DOKUMENT\\Projekt\\React\\BlueBox\\client\\src\\js\\bluebox\\gui\\EngineWindow.js"],"names":["React","Component","Shader","Time","Engine","EngineWindow","constructor","props","fpsTimer","frameCount","fps","animationId","engine","componentDidMount","preload","width","height","startMainLoop","componentWillUnmount","stopMainLoop","canvas2D","document","getElementById","ctx","getContext","font","fillStyle","canvas","gl","console","log","alert","viewport","clearColor","enable","DEPTH_TEST","CULL_FACE","cullFace","BACK","frontFace","CCW","mainShader","window","requestAnimationFrame","mainLoop","bind","cancelAnimationFrame","update","render","engine_container_style","display","flexDirection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// CSS\r\nimport '../../../css/EngineWindow.css';\r\n\r\n// JS\r\nimport Shader from '../Shader';\r\nimport Time from '../Time';\r\nimport Engine from '../Engine';\r\n\r\nclass EngineWindow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Initialize timing variables\r\n        this.fpsTimer = 0;\r\n        this.frameCount = 0;\r\n        this.fps = 0;\r\n        this.animationId = null;\r\n\r\n        this.engine = new Engine();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.engine.preload(this.props.width, this.props.height);\r\n        this.startMainLoop();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.stopMainLoop();\r\n    }\r\n\r\n    preload() {\r\n        // 2D Canvas for text display\r\n        this.canvas2D = document.getElementById('text-canvas');\r\n        this.ctx = this.canvas2D.getContext('2d');\r\n        this.ctx.font = \"20px Consolas\";\r\n        this.ctx.fillStyle = 'white';\r\n\r\n        // WebGL canvas\r\n        this.canvas = document.getElementById(\"gl-canvas\");\r\n        // Initialize the WebGL context\r\n        this.gl = this.canvas.getContext(\"webgl\");\r\n\r\n        // If WebGL isn't supported\r\n        if (!this.gl) {\r\n            console.log(\"WebGL is not supported\");\r\n            alert(\"Unable to initialize WebGL. Your browser or machine may not support it.\");\r\n            return 0;\r\n        }\r\n\r\n        this.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\r\n        // Set clear color to light blue, fully opaque\r\n        this.gl.clearColor(0.0, 0.40, 0.55, 1.0);\r\n        // Enable depth so that triangles closer to the camera don't get overlapped by those further away\r\n        this.gl.enable(this.gl.DEPTH_TEST);\r\n        // Only draw \"visible\" sides (memory saving)\r\n        this.gl.enable(this.gl.CULL_FACE);\r\n        this.gl.cullFace(this.gl.BACK);\r\n        this.gl.frontFace(this.gl.CCW);\r\n\r\n        this.mainShader = new Shader(this.canvas);\r\n\r\n        //this.SetUpEventListeners();\r\n    }\r\n\r\n    startMainLoop() {\r\n        // Initiate the main loop\r\n        this.animationId = window.requestAnimationFrame( this.mainLoop.bind(this) );\r\n    }\r\n\r\n    stopMainLoop() {\r\n        window.cancelAnimationFrame( this.animationId );\r\n        this.animationId = null;\r\n    }\r\n\r\n    mainLoop() {\r\n        this.animationId = window.requestAnimationFrame( this.mainLoop.bind(this) );\r\n\r\n        this.engine.update();\r\n    }\r\n\r\n    render() {\r\n        const engine_container_style = {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            width: this.props.width\r\n        };\r\n\r\n        return (\r\n            <div className=\"Engine-container\" style={engine_container_style}>\r\n                <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                    <div style={{width: this.props.width, height: this.props.height}}>\r\n                        <canvas id='gl-canvas' width={this.props.width} height={this.props.height}>\r\n                            Your browser does not support HTML5\r\n                        </canvas>\r\n                        <canvas id=\"text-canvas\" width={this.props.width} height={this.props.height}>\r\n                        </canvas>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EngineWindow;"]},"metadata":{},"sourceType":"module"}