{"ast":null,"code":"import Transform from './Transform';\nimport ClickBoxUI from './ClickBoxUI';\n\nclass CoordinateSystemUI {\n  constructor(shader, axisLength, axisWidth) {\n    this.gl = shader.gl;\n    this.positionAttributeLocation = shader.positionAttributeLocation;\n    this.normalAttributeLocation = shader.normalAttributeLocation;\n    this.colorUniformLocation = shader.colorUniformLocation;\n    this.matrixUniformLocation = shader.worldViewUniformLocation; // Create one cube model for all three axes\n\n    this.createAxis();\n    let triangles = 12;\n    this.totalVertices = triangles * 3; // Size dimensions and positioning for the axes\n\n    this.xAxisTransform = new Transform();\n    this.xAxisTransform.setPosition([axisLength + axisWidth, 0.0, 0.0]);\n    this.xAxisTransform.setScale([axisLength, axisWidth, axisWidth]);\n    this.yAxisTransform = new Transform();\n    this.yAxisTransform.setPosition([0.0, axisLength - axisWidth, 0.0]);\n    this.yAxisTransform.setScale([axisWidth, axisLength, axisWidth]);\n    this.zAxisTransform = new Transform();\n    this.zAxisTransform.setPosition([0.0, 0.0, axisLength + axisWidth]);\n    this.zAxisTransform.setScale([axisWidth, axisWidth, axisLength]);\n    let clickBoxVertices = [// V0\n    [-1.0, -1.0, -1.0, 1.0], // V1\n    [-1.0, -1.0, 1.0, 1.0], // V2\n    [1.0, -1.0, 1.0, 1.0], // V3\n    [1.0, -1.0, -1.0, 1.0], // V4\n    [-1.0, 1.0, -1.0, 1.0], // V5\n    [-1.0, 1.0, 1.0, 1.0], // V6\n    [1.0, 1.0, 1.0, 1.0], // V7\n    [1.0, 1.0, -1.0, 1.0]];\n    this.clickBoxAxisX = new ClickBoxUI(clickBoxVertices);\n    this.clickBoxAxisY = new ClickBoxUI(clickBoxVertices);\n    this.clickBoxAxisZ = new ClickBoxUI(clickBoxVertices);\n    this.updateClickBox();\n    this.isVisible = false;\n  }\n\n  updateClickBox() {\n    this.clickBoxAxisX.updateBorders(this.xAxisTransform.matrix);\n    this.clickBoxAxisY.updateBorders(this.yAxisTransform.matrix);\n    this.clickBoxAxisZ.updateBorders(this.zAxisTransform.matrix);\n  }\n\n  setParentTransform(parentTransform) {\n    // Ignore scaling\n    let temp = parentTransform.clone(); // Reset to default scale\n\n    temp.setScale([1.0, 1.0, 1.0]);\n    this.xAxisTransform.setParent(temp);\n    this.yAxisTransform.setParent(temp);\n    this.zAxisTransform.setParent(temp);\n    this.updateClickBox();\n  }\n\n  setVisible(flag) {\n    this.isVisible = flag;\n  }\n\n  bindBuffersAndEnableAttributes() {\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\n    this.gl.vertexAttribPointer(this.positionAttributeLocation, // Attribute location\n    3, // Number of elements per iteration (x,y,z)\n    this.gl.FLOAT, // Type of elements (32bit floats)\n    this.gl.FALSE, // Don't normalize the data\n    6 * Float32Array.BYTES_PER_ELEMENT, // how many bytes to move to the next vertex\n    0 // Offset from the beginning of a single vertex to this attribute\n    );\n    this.gl.vertexAttribPointer(this.normalAttributeLocation, // Attribute location\n    3, // Number of elements per iteration (x,y,z)\n    this.gl.FLOAT, // Type of elements (32bit floats)\n    this.gl.TRUE, // Not normalized\n    6 * Float32Array.BYTES_PER_ELEMENT, // how many bytes to move to the next normal\n    3 * Float32Array.BYTES_PER_ELEMENT // Offset from the beginning of a single vertex to this attribute\n    );\n    this.gl.enableVertexAttribArray(this.positionAttributeLocation);\n    this.gl.enableVertexAttribArray(this.normalAttributeLocation);\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n  }\n\n  render() {\n    if (this.isVisible) {\n      this.bindBuffersAndEnableAttributes(); // X-Axis\n\n      this.gl.uniformMatrix4fv(this.matrixUniformLocation, this.gl.FALSE, this.xAxisTransform.matrix);\n      this.gl.uniform3fv(this.colorUniformLocation, [1.0, 0.0, 0.0]);\n      this.gl.drawElements(this.gl.TRIANGLES, this.totalVertices, this.gl.UNSIGNED_SHORT, 0); // Y-Axis\n\n      this.gl.uniformMatrix4fv(this.matrixUniformLocation, this.gl.FALSE, this.yAxisTransform.matrix);\n      this.gl.uniform3fv(this.colorUniformLocation, [0.0, 1.0, 0.0]);\n      this.gl.drawElements(this.gl.TRIANGLES, this.totalVertices, this.gl.UNSIGNED_SHORT, 0); // Z-Axis\n\n      this.gl.uniformMatrix4fv(this.matrixUniformLocation, this.gl.FALSE, this.zAxisTransform.matrix);\n      this.gl.uniform3fv(this.colorUniformLocation, [0.0, 0.0, 1.0]);\n      this.gl.drawElements(this.gl.TRIANGLES, this.totalVertices, this.gl.UNSIGNED_SHORT, 0); // Unbind\n\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n  }\n\n  createAxis() {\n    // Create a cube\n    let x = 1.0;\n    let y = 1.0;\n    let z = 1.0; // Vertex coordinates, normals and texture coordinates\n\n    let vertexArray = [// X, Y, Z      Normal\n    // Vertex 0\n    -x, -y, -z, 0.0, -1.0, 0.0, -x, -y, -z, -1.0, 0.0, 0.0, -x, -y, -z, 0.0, 0.0, -1.0, // Vertex 1\n    -x, -y, z, 0.0, -1.0, 0.0, -x, -y, z, 0.0, 0.0, 1.0, -x, -y, z, -1.0, 0.0, 0.0, // Vertex 2\n    x, -y, z, 0.0, -1.0, 0.0, x, -y, z, 0.0, 0.0, 1.0, x, -y, z, 1.0, 0.0, 0.0, // Vertex 3\n    x, -y, -z, 0.0, -1.0, 0.0, x, -y, -z, 0.0, 0.0, -1.0, x, -y, -z, 1.0, 0.0, 0.0, // Vertex 4\n    -x, y, -z, -1.0, 0.0, 0.0, -x, y, -z, 0.0, 0.0, -1.0, -x, y, -z, 0.0, 1.0, 0.0, // Vertex 5\n    -x, y, z, 0.0, 0.0, 1.0, -x, y, z, -1.0, 0.0, 0.0, -x, y, z, 0.0, 1.0, 0.0, // Vertex 6\n    x, y, z, 0.0, 0.0, 1.0, x, y, z, 1.0, 0.0, 0.0, x, y, z, 0.0, 1.0, 0.0, // Vertex 7\n    x, y, -z, 0.0, 0.0, -1.0, x, y, -z, 1.0, 0.0, 0.0, x, y, -z, 0.0, 1.0, 0.0]; // Vertex indices\n\n    let indexArray = [// Bottom\n    0, 9, 6, // v0, v3, v2\n    6, 3, 0, // v2, v1, v0\n    // Front\n    4, 7, 18, // v1, v2, v6\n    18, 15, 4, // v6, v5, v1\n    // Left\n    1, 5, 16, // v0, v1, v5\n    16, 12, 1, // v5, v4, v0\n    // Back\n    2, 13, 21, // v0, v4, v7\n    21, 10, 2, // v7, v3, v0\n    // Right\n    8, 11, 22, // v2, v3, v7\n    22, 19, 8, // v7, v6, v2\n    // Top\n    14, 17, 20, // v4, v5, v6\n    20, 23, 14 // v6, v7, v4\n    ]; // Create vertex buffer\n\n    this.vertexBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(vertexArray), this.gl.STATIC_DRAW); // Create index buffer\n\n    this.indexBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indexArray), this.gl.STATIC_DRAW);\n    /*** SHADER STUFF ***/\n\n    this.gl.vertexAttribPointer(this.positionAttributeLocation, // Attribute location\n    3, // Number of elements per iteration (x,y,z)\n    this.gl.FLOAT, // Type of elements (32bit floats)\n    this.gl.FALSE, // Don't normalize the data\n    6 * Float32Array.BYTES_PER_ELEMENT, // how many bytes to move to the next vertex\n    0 // Offset from the beginning of a single vertex to this attribute\n    );\n    this.gl.vertexAttribPointer(this.normalAttributeLocation, // Attribute location\n    3, // Number of elements per iteration (x,y,z)\n    this.gl.FLOAT, // Type of elements (32bit floats)\n    this.gl.TRUE, // Not normalized\n    6 * Float32Array.BYTES_PER_ELEMENT, // how many bytes to move to the next normal\n    3 * Float32Array.BYTES_PER_ELEMENT // Offset from the beginning of a single vertex to this attribute\n    );\n    this.gl.enableVertexAttribArray(this.positionAttributeLocation);\n    this.gl.enableVertexAttribArray(this.normalAttributeLocation);\n  }\n\n}\n\nexport default CoordinateSystemUI;","map":{"version":3,"sources":["G:\\DOKUMENT\\Projekt\\React\\BlueBox\\client\\src\\js\\bluebox\\CoordinateSystemUI.js"],"names":["Transform","ClickBoxUI","CoordinateSystemUI","constructor","shader","axisLength","axisWidth","gl","positionAttributeLocation","normalAttributeLocation","colorUniformLocation","matrixUniformLocation","worldViewUniformLocation","createAxis","triangles","totalVertices","xAxisTransform","setPosition","setScale","yAxisTransform","zAxisTransform","clickBoxVertices","clickBoxAxisX","clickBoxAxisY","clickBoxAxisZ","updateClickBox","isVisible","updateBorders","matrix","setParentTransform","parentTransform","temp","clone","setParent","setVisible","flag","bindBuffersAndEnableAttributes","bindBuffer","ARRAY_BUFFER","vertexBuffer","vertexAttribPointer","FLOAT","FALSE","Float32Array","BYTES_PER_ELEMENT","TRUE","enableVertexAttribArray","ELEMENT_ARRAY_BUFFER","indexBuffer","render","uniformMatrix4fv","uniform3fv","drawElements","TRIANGLES","UNSIGNED_SHORT","x","y","z","vertexArray","indexArray","createBuffer","bufferData","STATIC_DRAW","Uint16Array"],"mappings":"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","sourcesContent":["\r\nimport Transform from './Transform';\r\nimport ClickBoxUI from './ClickBoxUI';\r\n\r\nclass CoordinateSystemUI {\r\n\r\n    constructor (shader, axisLength, axisWidth) {\r\n\r\n        this.gl = shader.gl;\r\n        this.positionAttributeLocation = shader.positionAttributeLocation;\r\n        this.normalAttributeLocation = shader.normalAttributeLocation;\r\n        this.colorUniformLocation = shader.colorUniformLocation;\r\n        this.matrixUniformLocation = shader.worldViewUniformLocation;\r\n\r\n        // Create one cube model for all three axes\r\n        this.createAxis();\r\n\r\n        let triangles = 12;\r\n        this.totalVertices = triangles*3;\r\n\r\n        // Size dimensions and positioning for the axes\r\n        this.xAxisTransform = new Transform();\r\n        this.xAxisTransform.setPosition([axisLength+axisWidth, 0.0, 0.0]);\r\n        this.xAxisTransform.setScale([axisLength, axisWidth, axisWidth]);\r\n        this.yAxisTransform = new Transform();\r\n        this.yAxisTransform.setPosition([0.0, axisLength-axisWidth, 0.0]);\r\n        this.yAxisTransform.setScale([axisWidth, axisLength, axisWidth]);\r\n        this.zAxisTransform = new Transform();\r\n        this.zAxisTransform.setPosition([0.0, 0.0, axisLength+axisWidth]);\r\n        this.zAxisTransform.setScale([axisWidth, axisWidth, axisLength]);\r\n\r\n        let clickBoxVertices = [\r\n            // V0\r\n            [-1.0, -1.0, -1.0, 1.0],\r\n            // V1\r\n            [-1.0, -1.0, 1.0, 1.0],\r\n            // V2\r\n            [1.0, -1.0, 1.0, 1.0],\r\n            // V3\r\n            [1.0, -1.0, -1.0, 1.0],\r\n            // V4\r\n            [-1.0, 1.0, -1.0, 1.0],\r\n            // V5\r\n            [-1.0, 1.0, 1.0, 1.0],\r\n            // V6\r\n            [1.0, 1.0, 1.0, 1.0],\r\n            // V7\r\n            [1.0, 1.0, -1.0, 1.0]\r\n        ];\r\n\r\n        this.clickBoxAxisX = new ClickBoxUI(clickBoxVertices);\r\n        this.clickBoxAxisY = new ClickBoxUI(clickBoxVertices);\r\n        this.clickBoxAxisZ = new ClickBoxUI(clickBoxVertices);\r\n\r\n        this.updateClickBox();\r\n\r\n        this.isVisible = false;\r\n    }\r\n\r\n    updateClickBox() {\r\n        this.clickBoxAxisX.updateBorders(this.xAxisTransform.matrix);\r\n        this.clickBoxAxisY.updateBorders(this.yAxisTransform.matrix);\r\n        this.clickBoxAxisZ.updateBorders(this.zAxisTransform.matrix);\r\n    }\r\n\r\n    setParentTransform(parentTransform) {\r\n\r\n        // Ignore scaling\r\n        let temp = parentTransform.clone();\r\n        // Reset to default scale\r\n        temp.setScale([1.0, 1.0, 1.0]);\r\n\r\n        this.xAxisTransform.setParent(temp);\r\n        this.yAxisTransform.setParent(temp);\r\n        this.zAxisTransform.setParent(temp);\r\n        this.updateClickBox();\r\n    }\r\n\r\n    setVisible(flag) {\r\n        this.isVisible = flag;\r\n    }\r\n\r\n    bindBuffersAndEnableAttributes() {\r\n\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        this.gl.vertexAttribPointer(\r\n            this.positionAttributeLocation, // Attribute location\r\n            3, // Number of elements per iteration (x,y,z)\r\n            this.gl.FLOAT, // Type of elements (32bit floats)\r\n            this.gl.FALSE, // Don't normalize the data\r\n            6 * Float32Array.BYTES_PER_ELEMENT, // how many bytes to move to the next vertex\r\n            0// Offset from the beginning of a single vertex to this attribute\r\n        );\r\n        this.gl.vertexAttribPointer(\r\n            this.normalAttributeLocation, // Attribute location\r\n            3, // Number of elements per iteration (x,y,z)\r\n            this.gl.FLOAT, // Type of elements (32bit floats)\r\n            this.gl.TRUE, // Not normalized\r\n            6 * Float32Array.BYTES_PER_ELEMENT, // how many bytes to move to the next normal\r\n            3 * Float32Array.BYTES_PER_ELEMENT// Offset from the beginning of a single vertex to this attribute\r\n        );\r\n        this.gl.enableVertexAttribArray(this.positionAttributeLocation);\r\n        this.gl.enableVertexAttribArray(this.normalAttributeLocation);\r\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n    }\r\n\r\n    render() {\r\n        if (this.isVisible) {\r\n            this.bindBuffersAndEnableAttributes();\r\n\r\n            // X-Axis\r\n            this.gl.uniformMatrix4fv(this.matrixUniformLocation, this.gl.FALSE, this.xAxisTransform.matrix);\r\n            this.gl.uniform3fv(this.colorUniformLocation, [1.0, 0.0, 0.0]);\r\n            this.gl.drawElements(this.gl.TRIANGLES, this.totalVertices, this.gl.UNSIGNED_SHORT, 0);\r\n\r\n            // Y-Axis\r\n            this.gl.uniformMatrix4fv(this.matrixUniformLocation, this.gl.FALSE, this.yAxisTransform.matrix);\r\n            this.gl.uniform3fv(this.colorUniformLocation, [0.0, 1.0, 0.0]);\r\n            this.gl.drawElements(this.gl.TRIANGLES, this.totalVertices, this.gl.UNSIGNED_SHORT, 0);\r\n\r\n            // Z-Axis\r\n            this.gl.uniformMatrix4fv(this.matrixUniformLocation, this.gl.FALSE, this.zAxisTransform.matrix);\r\n            this.gl.uniform3fv(this.colorUniformLocation, [0.0, 0.0, 1.0]);\r\n            this.gl.drawElements(this.gl.TRIANGLES, this.totalVertices, this.gl.UNSIGNED_SHORT, 0);\r\n\r\n            // Unbind\r\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\r\n            this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\r\n        }\r\n    }\r\n\r\n    createAxis () {\r\n        // Create a cube\r\n        let x = 1.0;\r\n        let y = 1.0;\r\n        let z = 1.0;\r\n\r\n        // Vertex coordinates, normals and texture coordinates\r\n        let vertexArray = [\t// X, Y, Z      Normal\r\n            // Vertex 0\r\n            -x, -y, -z,      0.0, -1.0,  0.0,\r\n            -x, -y, -z,     -1.0,  0.0,  0.0,\r\n            -x, -y, -z,      0.0,  0.0,  -1.0,\r\n\r\n            // Vertex 1\r\n            -x, -y,  z,     0.0, -1.0,  0.0,\r\n            -x, -y,  z,     0.0,  0.0, 1.0,\r\n            -x, -y,  z,    -1.0,  0.0,  0.0,\r\n\r\n            // Vertex 2\r\n            x, -y,  z,      0.0, -1.0,  0.0,\r\n            x, -y,  z,      0.0,  0.0, 1.0,\r\n            x, -y,  z,      1.0,  0.0,  0.0,\r\n\r\n            // Vertex 3\r\n            x, -y, -z,      0.0, -1.0,  0.0,\r\n            x, -y, -z,      0.0,  0.0,  -1.0,\r\n            x, -y, -z,      1.0,  0.0,  0.0,\r\n\r\n            // Vertex 4\r\n            -x, y, -z,     -1.0,  0.0,  0.0,\r\n            -x, y, -z,      0.0,  0.0,  -1.0,\r\n            -x, y, -z,      0.0,  1.0,  0.0,\r\n\r\n            // Vertex 5\r\n            -x, y, z,      0.0,  0.0, 1.0,\r\n            -x, y, z,     -1.0,  0.0,  0.0,\r\n            -x, y, z,      0.0,  1.0,  0.0,\r\n\r\n            // Vertex 6\r\n            x, y, z,       0.0,  0.0, 1.0,\r\n            x, y, z,       1.0,  0.0,  0.0,\r\n            x, y, z,       0.0,  1.0,  0.0,\r\n\r\n            // Vertex 7\r\n            x, y, -z,       0.0,  0.0,  -1.0,\r\n            x, y, -z,       1.0,  0.0,  0.0,\r\n            x, y, -z,       0.0,  1.0,  0.0\r\n        ];\r\n\r\n        // Vertex indices\r\n        let indexArray = [\t// Bottom\r\n            0, 9, 6,  // v0, v3, v2\r\n            6, 3, 0,  // v2, v1, v0\r\n\r\n            // Front\r\n            4, 7, 18,  // v1, v2, v6\r\n            18, 15, 4, // v6, v5, v1\r\n\r\n            // Left\r\n            1, 5, 16,  // v0, v1, v5\r\n            16, 12, 1, // v5, v4, v0\r\n\r\n            // Back\r\n            2, 13, 21, // v0, v4, v7\r\n            21, 10, 2, // v7, v3, v0\r\n\r\n            // Right\r\n            8, 11, 22, // v2, v3, v7\r\n            22, 19, 8, // v7, v6, v2\r\n\r\n            // Top\r\n            14, 17, 20, // v4, v5, v6\r\n            20, 23, 14  // v6, v7, v4\r\n        ];\r\n\r\n        // Create vertex buffer\r\n        this.vertexBuffer = this.gl.createBuffer();\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(vertexArray), this.gl.STATIC_DRAW);\r\n\r\n        // Create index buffer\r\n        this.indexBuffer = this.gl.createBuffer();\r\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indexArray), this.gl.STATIC_DRAW);\r\n\r\n        /*** SHADER STUFF ***/\r\n        this.gl.vertexAttribPointer(\r\n            this.positionAttributeLocation, // Attribute location\r\n            3, // Number of elements per iteration (x,y,z)\r\n            this.gl.FLOAT, // Type of elements (32bit floats)\r\n            this.gl.FALSE, // Don't normalize the data\r\n            6 * Float32Array.BYTES_PER_ELEMENT, // how many bytes to move to the next vertex\r\n            0// Offset from the beginning of a single vertex to this attribute\r\n        );\r\n        this.gl.vertexAttribPointer(\r\n            this.normalAttributeLocation, // Attribute location\r\n            3, // Number of elements per iteration (x,y,z)\r\n            this.gl.FLOAT, // Type of elements (32bit floats)\r\n            this.gl.TRUE, // Not normalized\r\n            6 * Float32Array.BYTES_PER_ELEMENT, // how many bytes to move to the next normal\r\n            3 * Float32Array.BYTES_PER_ELEMENT// Offset from the beginning of a single vertex to this attribute\r\n        );\r\n        this.gl.enableVertexAttribArray(this.positionAttributeLocation);\r\n        this.gl.enableVertexAttribArray(this.normalAttributeLocation);\r\n    }\r\n}\r\n\r\nexport default CoordinateSystemUI;"]},"metadata":{},"sourceType":"module"}