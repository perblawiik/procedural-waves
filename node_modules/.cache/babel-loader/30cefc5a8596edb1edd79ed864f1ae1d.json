{"ast":null,"code":"var _jsxFileName = \"G:\\\\DOKUMENT\\\\Projekt\\\\React\\\\BlueBox\\\\client\\\\src\\\\js\\\\bluebox\\\\gui\\\\EngineWindow.js\";\nimport React, { Component } from 'react'; // CSS\n\nimport '../../../css/EngineWindow.css'; // JS\n\nimport Engine from '../Engine';\n\nclass EngineWindow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      canvasWidth: this.props.width,\n      canvasHeight: this.props.height\n    };\n    this.animationId = null;\n    this.engine = new Engine();\n  }\n\n  updateWindowDimensions() {\n    let engineContainer = document.getElementById(\"engine-window-container\");\n    this.canvas.width = engineContainer.offsetWidth;\n    this.textCanvas.width = engineContainer.offsetWidth;\n    this.setState({\n      canvasWidth: engineContainer.offsetWidth,\n      canvasHeight: engineContainer.offsetHeight\n    });\n  }\n\n  componentDidMount() {\n    this.engine.preload();\n    this.startMainLoop();\n    this.canvas = document.getElementById(\"gl-canvas\");\n    this.textCanvas = document.getElementById(\"text-canvas\");\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.stopMainLoop();\n    window.removeEventListener(\"resize\", this.updateWindowDimensions.bind(this));\n  }\n\n  startMainLoop() {\n    // Initiate the main loop\n    this.animationId = window.requestAnimationFrame(this.mainLoop.bind(this));\n  }\n\n  stopMainLoop() {\n    window.cancelAnimationFrame(this.animationId);\n    this.animationId = null;\n  }\n\n  mainLoop() {\n    this.animationId = window.requestAnimationFrame(this.mainLoop.bind(this));\n    this.engine.run();\n  }\n\n  render() {\n    let canvasStyle = {\n      width: this.state.canvasWidth,\n      height: this.state.canvasHeight\n    };\n    return React.createElement(\"div\", {\n      id: \"engine-window-container\",\n      className: \"EngineWindow-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"gl-canvas\",\n      width: this.state.canvasWidth,\n      height: this.state.canvasHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Your browser does not support HTML5\"), React.createElement(\"canvas\", {\n      id: \"text-canvas\",\n      width: this.state.canvasWidth,\n      height: this.state.canvasHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default EngineWindow;","map":{"version":3,"sources":["G:\\DOKUMENT\\Projekt\\React\\BlueBox\\client\\src\\js\\bluebox\\gui\\EngineWindow.js"],"names":["React","Component","Engine","EngineWindow","constructor","props","state","canvasWidth","width","canvasHeight","height","animationId","engine","updateWindowDimensions","engineContainer","document","getElementById","canvas","offsetWidth","textCanvas","setState","offsetHeight","componentDidMount","preload","startMainLoop","window","addEventListener","bind","componentWillUnmount","stopMainLoop","removeEventListener","requestAnimationFrame","mainLoop","cancelAnimationFrame","run","render","canvasStyle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// CSS\r\nimport '../../../css/EngineWindow.css';\r\n\r\n// JS\r\nimport Engine from '../Engine';\r\n\r\nclass EngineWindow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            canvasWidth: this.props.width,\r\n            canvasHeight: this.props.height\r\n        };\r\n\r\n        this.animationId = null;\r\n        this.engine = new Engine();\r\n    }\r\n\r\n    updateWindowDimensions() {\r\n        let engineContainer = document.getElementById(\"engine-window-container\");\r\n\r\n        this.canvas.width = engineContainer.offsetWidth;\r\n        this.textCanvas.width = engineContainer.offsetWidth;\r\n\r\n        this.setState({\r\n            canvasWidth: engineContainer.offsetWidth,\r\n            canvasHeight: engineContainer.offsetHeight\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.engine.preload();\r\n        this.startMainLoop();\r\n        this.canvas = document.getElementById(\"gl-canvas\");\r\n        this.textCanvas = document.getElementById(\"text-canvas\");\r\n\r\n        this.updateWindowDimensions();\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions.bind(this));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.stopMainLoop();\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions.bind(this));\r\n    }\r\n\r\n    startMainLoop() {\r\n        // Initiate the main loop\r\n        this.animationId = window.requestAnimationFrame( this.mainLoop.bind(this) );\r\n    }\r\n\r\n    stopMainLoop() {\r\n        window.cancelAnimationFrame( this.animationId );\r\n        this.animationId = null;\r\n    }\r\n\r\n    mainLoop() {\r\n        this.animationId = window.requestAnimationFrame( this.mainLoop.bind(this) );\r\n\r\n        this.engine.run();\r\n    }\r\n\r\n    render() {\r\n\r\n        let canvasStyle = {\r\n            width: this.state.canvasWidth,\r\n            height: this.state.canvasHeight\r\n        };\r\n\r\n        return (\r\n            <div id='engine-window-container' className=\"EngineWindow-container\">\r\n                <canvas id='gl-canvas' width={this.state.canvasWidth} height={this.state.canvasHeight}>\r\n                    Your browser does not support HTML5\r\n                </canvas>\r\n                <canvas id=\"text-canvas\" width={this.state.canvasWidth} height={this.state.canvasHeight}>\r\n                </canvas>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EngineWindow;"]},"metadata":{},"sourceType":"module"}