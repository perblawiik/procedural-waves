{"ast":null,"code":"// JavaScript\nimport Transform from './Transform';\nimport Vector3 from './math/Vector3';\n\nclass Camera {\n  constructor(shaders) {\n    this.transform = new Transform();\n    this.shaders = shaders;\n    this.updateUniforms();\n  }\n\n  get position() {\n    return this.transform.position;\n  }\n\n  get rotation() {\n    return this.transform.rotation;\n  }\n\n  get scale() {\n    return this.transform.scaling;\n  }\n\n  get right() {\n    return new Vector3([this.transform.matrix[0], this.transform.matrix[4], this.transform.matrix[8]]);\n  }\n\n  get up() {\n    return new Vector3([this.transform.matrix[1], this.transform.matrix[5], this.transform.matrix[9]]);\n  }\n\n  get forward() {\n    return new Vector3([-this.transform.matrix[2], -this.transform.matrix[6], -this.transform.matrix[10]]);\n  }\n\n  translate(vec) {\n    let rightVec = new Vector3([this.transform.matrix[0] * vec.x, this.transform.matrix[4] * vec.x, this.transform.matrix[8] * vec.x]);\n    let upVec = new Vector3([this.transform.matrix[1] * vec.y, this.transform.matrix[5] * vec.y, this.transform.matrix[9] * vec.y]);\n    let forwardVec = new Vector3([this.transform.matrix[2] * vec.z, this.transform.matrix[6] * vec.z, this.transform.matrix[10] * vec.z]);\n    this.setPosition(new Vector3([this.transform.position.x + rightVec.x + upVec.x + forwardVec.x, this.transform.position.y + rightVec.y + upVec.y + forwardVec.y, this.transform.position.z + rightVec.z + upVec.z + forwardVec.z]));\n  }\n\n  rotate(rot) {\n    this.setRotation([this.transform.rotation.x + rot[0], this.transform.rotation.y + rot[1], this.transform.rotation.z + rot[2]]);\n  }\n\n  setPosition(cameraPosition) {\n    this.transform.setPosition(cameraPosition);\n    this.transform.invert();\n    this.updateUniforms();\n  }\n\n  setRotation(cameraRotation) {\n    this.transform.setRotation(cameraRotation);\n    this.transform.invert();\n    this.updateUniforms();\n  }\n\n  rotateX(angle) {\n    this.setRotation([angle, this.transform.rotation.y, this.transform.rotation.z]);\n  }\n\n  rotateY(angle) {\n    this.setRotation([this.transform.rotation.x, angle, this.transform.rotation.z]);\n  }\n\n  updateUniforms() {\n    this.shaders.forEach(shader => {\n      shader.activate();\n      shader.setCameraViewUniform(this.transform.matrix);\n      shader.setCameraViewPosition(this.transform.position);\n    });\n  }\n\n}\n\nexport default Camera;","map":{"version":3,"sources":["G:\\DOKUMENT\\Projekt\\React\\BlueBox\\client\\src\\js\\bluebox\\Camera.js"],"names":["Transform","Vector3","Camera","constructor","shaders","transform","updateUniforms","position","rotation","scale","scaling","right","matrix","up","forward","translate","vec","rightVec","x","upVec","y","forwardVec","z","setPosition","rotate","rot","setRotation","cameraPosition","invert","cameraRotation","rotateX","angle","rotateY","forEach","shader","activate","setCameraViewUniform","setCameraViewPosition"],"mappings":"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","sourcesContent":["// JavaScript\r\nimport Transform from './Transform';\r\nimport Vector3 from './math/Vector3';\r\n\r\nclass Camera {\r\n    constructor(shaders) {\r\n        this.transform = new Transform();\r\n        this.shaders = shaders;\r\n        this.updateUniforms();\r\n    }\r\n\r\n    get position() {\r\n        return this.transform.position;\r\n    }\r\n\r\n    get rotation() {\r\n        return this.transform.rotation;\r\n    }\r\n\r\n    get scale() {\r\n        return this.transform.scaling;\r\n    }\r\n\r\n    get right() {\r\n        return new Vector3([this.transform.matrix[0], this.transform.matrix[4], this.transform.matrix[8]]);\r\n    }\r\n\r\n    get up () {\r\n        return new Vector3([this.transform.matrix[1], this.transform.matrix[5], this.transform.matrix[9]]);\r\n    }\r\n\r\n    get forward() {\r\n        return new Vector3([-this.transform.matrix[2], -this.transform.matrix[6], -this.transform.matrix[10]]);\r\n    }\r\n\r\n    translate (vec) {\r\n        let rightVec = new Vector3([this.transform.matrix[0]*vec.x, this.transform.matrix[4]*vec.x, this.transform.matrix[8]*vec.x]);\r\n        let upVec = new Vector3([this.transform.matrix[1]*vec.y, this.transform.matrix[5]*vec.y, this.transform.matrix[9]*vec.y]);\r\n        let forwardVec = new Vector3([this.transform.matrix[2]*vec.z, this.transform.matrix[6]*vec.z, this.transform.matrix[10]*vec.z]);\r\n\r\n        this.setPosition(\r\n            new Vector3([\r\n                this.transform.position.x + rightVec.x + upVec.x + forwardVec.x,\r\n                this.transform.position.y + rightVec.y + upVec.y + forwardVec.y,\r\n                this.transform.position.z + rightVec.z + upVec.z + forwardVec.z,\r\n            ])\r\n        );\r\n    }\r\n\r\n    rotate (rot) {\r\n        this.setRotation([\r\n            this.transform.rotation.x + rot[0],\r\n            this.transform.rotation.y + rot[1],\r\n            this.transform.rotation.z + rot[2]\r\n        ]);\r\n    }\r\n\r\n    setPosition(cameraPosition) {\r\n        this.transform.setPosition(cameraPosition);\r\n        this.transform.invert();\r\n        this.updateUniforms();\r\n    }\r\n\r\n    setRotation(cameraRotation) {\r\n        this.transform.setRotation(cameraRotation);\r\n        this.transform.invert();\r\n        this.updateUniforms();\r\n    }\r\n\r\n    rotateX (angle) {\r\n        this.setRotation([angle, this.transform.rotation.y, this.transform.rotation.z]);\r\n    }\r\n\r\n    rotateY (angle) {\r\n        this.setRotation([this.transform.rotation.x, angle, this.transform.rotation.z]);\r\n    }\r\n\r\n    updateUniforms() {\r\n        this.shaders.forEach((shader) => {\r\n            shader.activate();\r\n            shader.setCameraViewUniform(this.transform.matrix);\r\n            shader.setCameraViewPosition(this.transform.position);\r\n        });\r\n    }\r\n}\r\n\r\nexport default Camera;"]},"metadata":{},"sourceType":"module"}