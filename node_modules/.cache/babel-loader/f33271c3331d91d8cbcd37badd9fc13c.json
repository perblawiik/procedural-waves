{"ast":null,"code":"var _jsxFileName = \"G:\\\\DOKUMENT\\\\Projekt\\\\React\\\\BlueBox\\\\client\\\\src\\\\js\\\\bluebox\\\\gui\\\\EngineWindow.js\";\nimport React, { Component } from 'react'; // CSS\n\nimport '../../../css/EngineWindow.css'; // JS\n\nimport Engine from '../Engine';\n\nclass EngineWindow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      canvasWidth: this.props.width,\n      canvasHeight: this.props.height\n    };\n    this.animationId = null;\n    this.engine = new Engine();\n  }\n\n  updateWindowDimensions() {\n    let widthOffset = document.getElementById(\"side-panel\").offsetWidth;\n    console.log(\"sidepanel: \" + widthOffset);\n    console.log(\"canvas: \" + this.canvas.offsetWidth);\n    let temp = this.canvas.offsetWidth - widthOffset;\n    console.log(\"canvas - sidepanel: \" + temp); //let heightOffset = document.getElementById(\"top-panel\").height;\n    //heightOffset += document.getElementById(\"app-header\").height;\n\n    this.setState({\n      canvasWidth: this.canvas.offsetWidth,\n      canvasHeight: this.canvas.offsetHeight\n    });\n    console.log(this.state.canvasWidth);\n  }\n\n  componentDidMount() {\n    this.engine.preload();\n    this.startMainLoop();\n    this.canvas = document.getElementById(\"gl-canvas\");\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.stopMainLoop();\n    window.removeEventListener(\"resize\", this.updateWindowDimensions.bind(this));\n  }\n\n  startMainLoop() {\n    // Initiate the main loop\n    this.animationId = window.requestAnimationFrame(this.mainLoop.bind(this));\n  }\n\n  stopMainLoop() {\n    window.cancelAnimationFrame(this.animationId);\n    this.animationId = null;\n  }\n\n  mainLoop() {\n    this.animationId = window.requestAnimationFrame(this.mainLoop.bind(this));\n    this.engine.run();\n  }\n\n  render() {\n    const engine_container_style = {\n      display: 'flex',\n      flexDirection: 'column',\n      width: this.props.width\n    };\n    return React.createElement(\"div\", {\n      className: \"Engine-container\",\n      style: engine_container_style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"gl-canvas\",\n      width: this.state.canvasWidth,\n      height: this.state.canvasHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Your browser does not support HTML5\"), React.createElement(\"canvas\", {\n      id: \"text-canvas\",\n      width: this.state.canvasWidth,\n      height: this.state.canvasHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default EngineWindow;","map":{"version":3,"sources":["G:\\DOKUMENT\\Projekt\\React\\BlueBox\\client\\src\\js\\bluebox\\gui\\EngineWindow.js"],"names":["React","Component","Engine","EngineWindow","constructor","props","state","canvasWidth","width","canvasHeight","height","animationId","engine","updateWindowDimensions","widthOffset","document","getElementById","offsetWidth","console","log","canvas","temp","setState","offsetHeight","componentDidMount","preload","startMainLoop","window","addEventListener","bind","componentWillUnmount","stopMainLoop","removeEventListener","requestAnimationFrame","mainLoop","cancelAnimationFrame","run","render","engine_container_style","display","flexDirection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// CSS\r\nimport '../../../css/EngineWindow.css';\r\n\r\n// JS\r\nimport Engine from '../Engine';\r\n\r\nclass EngineWindow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            canvasWidth: this.props.width,\r\n            canvasHeight: this.props.height\r\n        };\r\n\r\n        this.animationId = null;\r\n        this.engine = new Engine();\r\n    }\r\n\r\n    updateWindowDimensions() {\r\n\r\n        let widthOffset = document.getElementById(\"side-panel\").offsetWidth;\r\n        console.log(\"sidepanel: \" + widthOffset);\r\n        console.log(\"canvas: \" + this.canvas.offsetWidth);\r\n        let temp = this.canvas.offsetWidth - widthOffset;\r\n        console.log(\"canvas - sidepanel: \" + temp);\r\n        //let heightOffset = document.getElementById(\"top-panel\").height;\r\n        //heightOffset += document.getElementById(\"app-header\").height;\r\n\r\n        this.setState({\r\n            canvasWidth: this.canvas.offsetWidth,\r\n            canvasHeight: this.canvas.offsetHeight\r\n        });\r\n\r\n        console.log(this.state.canvasWidth);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.engine.preload();\r\n        this.startMainLoop();\r\n        this.canvas = document.getElementById(\"gl-canvas\");\r\n\r\n        this.updateWindowDimensions();\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions.bind(this));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.stopMainLoop();\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions.bind(this));\r\n    }\r\n\r\n    startMainLoop() {\r\n        // Initiate the main loop\r\n        this.animationId = window.requestAnimationFrame( this.mainLoop.bind(this) );\r\n    }\r\n\r\n    stopMainLoop() {\r\n        window.cancelAnimationFrame( this.animationId );\r\n        this.animationId = null;\r\n    }\r\n\r\n    mainLoop() {\r\n        this.animationId = window.requestAnimationFrame( this.mainLoop.bind(this) );\r\n\r\n        this.engine.run();\r\n    }\r\n\r\n    render() {\r\n        const engine_container_style = {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            width: this.props.width\r\n        };\r\n\r\n        return (\r\n            <div className=\"Engine-container\" style={engine_container_style}>\r\n                <canvas id='gl-canvas' width={this.state.canvasWidth} height={this.state.canvasHeight}>\r\n                    Your browser does not support HTML5\r\n                </canvas>\r\n                <canvas id=\"text-canvas\" width={this.state.canvasWidth} height={this.state.canvasHeight}>\r\n                </canvas>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EngineWindow;"]},"metadata":{},"sourceType":"module"}