{"ast":null,"code":"var _jsxFileName = \"G:\\\\DOKUMENT\\\\Projekt\\\\React\\\\BlueBox\\\\client\\\\src\\\\js\\\\bluebox\\\\gui\\\\EngineWindow.js\";\nimport React, { Component } from 'react'; // CSS\n\nimport '../../../css/EngineWindow.css'; // JS\n\nimport Engine from '../Engine';\n\nclass EngineWindow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      canvasWidth: this.props.width,\n      canvasHeight: this.props.height\n    };\n    this.animationId = null;\n    this.engine = new Engine();\n  }\n\n  resizeCanvas() {\n    this.setState({\n      canvasWidth: this.engineWindowContainer.offsetWidth,\n      canvasHeight: this.engineWindowContainer.offsetHeight\n    });\n  }\n\n  componentDidMount() {\n    document.onclick = function (e) {\n      if (e.button == 2 || e.button == 3) {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      }\n    };\n\n    window.addEventListener('contextmenu', function (e) {\n      // Not compatible with IE < 9\n      e.preventDefault();\n      e.stopPropagation();\n    }, false); // The engine window container component is used for setting the size of the canvas\n\n    this.engineWindowContainer = document.getElementById(\"engine-window-container\");\n    window.addEventListener(\"resize\", this.resizeCanvas.bind(this)); // Start the loop\n\n    this.startMainLoop();\n  }\n\n  componentWillUnmount() {\n    this.stopMainLoop();\n    window.removeEventListener(\"resize\", this.resizeCanvas.bind(this));\n  }\n\n  startMainLoop() {\n    // Set up the graphics engine (webgl context, shaders and draw scene objects)\n    this.engine.preload(); // Set to correct dimensions for canvas\n\n    this.resizeCanvas(); // Initiate the main loop\n\n    this.animationId = window.requestAnimationFrame(this.mainLoop.bind(this));\n  }\n\n  stopMainLoop() {\n    window.cancelAnimationFrame(this.animationId);\n    this.animationId = null;\n  }\n\n  mainLoop() {\n    this.animationId = window.requestAnimationFrame(this.mainLoop.bind(this));\n    this.engine.run();\n  }\n\n  render() {\n    let canvasStyle = {\n      width: this.state.canvasWidth,\n      height: this.state.canvasHeight\n    };\n    return React.createElement(\"div\", {\n      id: \"engine-window-container\",\n      className: \"EngineWindow-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      style: canvasStyle,\n      id: \"gl-canvas\",\n      width: this.state.canvasWidth,\n      height: this.state.canvasHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Your browser does not support HTML5\"), React.createElement(\"canvas\", {\n      style: canvasStyle,\n      id: \"text-canvas\",\n      width: this.state.canvasWidth,\n      height: this.state.canvasHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default EngineWindow;","map":{"version":3,"sources":["G:\\DOKUMENT\\Projekt\\React\\BlueBox\\client\\src\\js\\bluebox\\gui\\EngineWindow.js"],"names":["React","Component","Engine","EngineWindow","constructor","props","state","canvasWidth","width","canvasHeight","height","animationId","engine","resizeCanvas","setState","engineWindowContainer","offsetWidth","offsetHeight","componentDidMount","document","onclick","e","button","preventDefault","stopPropagation","window","addEventListener","getElementById","bind","startMainLoop","componentWillUnmount","stopMainLoop","removeEventListener","preload","requestAnimationFrame","mainLoop","cancelAnimationFrame","run","render","canvasStyle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// CSS\r\nimport '../../../css/EngineWindow.css';\r\n\r\n// JS\r\nimport Engine from '../Engine';\r\n\r\nclass EngineWindow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            canvasWidth: this.props.width,\r\n            canvasHeight: this.props.height\r\n        };\r\n\r\n        this.animationId = null;\r\n        this.engine = new Engine();\r\n    }\r\n\r\n    resizeCanvas() {\r\n        this.setState({\r\n            canvasWidth: this.engineWindowContainer.offsetWidth,\r\n            canvasHeight: this.engineWindowContainer.offsetHeight\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.onclick = function(e) { if(e.button == 2 || e.button == 3) { e.preventDefault(); e.stopPropagation(); return(false); } };\r\n\r\n        window.addEventListener('contextmenu', function (e) { // Not compatible with IE < 9\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }, false);\r\n\r\n        // The engine window container component is used for setting the size of the canvas\r\n        this.engineWindowContainer = document.getElementById(\"engine-window-container\");\r\n        window.addEventListener(\"resize\", this.resizeCanvas.bind(this));\r\n\r\n        // Start the loop\r\n        this.startMainLoop();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.stopMainLoop();\r\n        window.removeEventListener(\"resize\", this.resizeCanvas.bind(this));\r\n    }\r\n\r\n    startMainLoop() {\r\n        // Set up the graphics engine (webgl context, shaders and draw scene objects)\r\n        this.engine.preload();\r\n\r\n        // Set to correct dimensions for canvas\r\n        this.resizeCanvas();\r\n\r\n        // Initiate the main loop\r\n        this.animationId = window.requestAnimationFrame( this.mainLoop.bind(this) );\r\n    }\r\n\r\n    stopMainLoop() {\r\n        window.cancelAnimationFrame( this.animationId );\r\n        this.animationId = null;\r\n    }\r\n\r\n    mainLoop() {\r\n        this.animationId = window.requestAnimationFrame( this.mainLoop.bind(this) );\r\n        this.engine.run();\r\n    }\r\n\r\n    render() {\r\n        let canvasStyle = {\r\n            width: this.state.canvasWidth,\r\n            height: this.state.canvasHeight\r\n        };\r\n\r\n        return (\r\n            <div id='engine-window-container' className=\"EngineWindow-container\">\r\n                <canvas style={canvasStyle} id='gl-canvas' width={this.state.canvasWidth} height={this.state.canvasHeight}>\r\n                    Your browser does not support HTML5\r\n                </canvas>\r\n                <canvas style={canvasStyle} id=\"text-canvas\" width={this.state.canvasWidth} height={this.state.canvasHeight}>\r\n                </canvas>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EngineWindow;"]},"metadata":{},"sourceType":"module"}