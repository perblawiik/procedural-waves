{"ast":null,"code":"import Transform from './Transform'; // TODO: Add a Script component for game object logic\n// TODO: Linear interpolation for transforms (translation and rotation)\n// TODO: Implement visible and interactable local coordinate system for game objects\n// TODO: Add a RigidBody component for handling velocity, acceleration and mass\n\nclass GameObject {\n  constructor(name) {\n    this.nameTag = name;\n    this.meshes = [];\n    this.parent = null;\n    this.transform = new Transform();\n  }\n\n  get position() {\n    return new Vector3([this.transform.matrix[12], this.transform.matrix[13], this.transform.matrix[14]]);\n  }\n\n  get rotation() {\n    return this.transform.rotation;\n  }\n\n  get scale() {\n    return this.transform.scaling;\n  }\n\n  setNameTag(name) {\n    this.nameTag = name;\n  }\n\n  translate(val) {\n    this.transform.translate(val);\n  }\n\n  setPosition(pos) {\n    this.transform.setPosition(pos);\n  }\n\n  setRotation(rot) {\n    this.transform.setRotation(rot);\n  }\n\n  setScale(scale) {\n    this.transform.setScale(scale);\n  }\n\n  addMesh(mesh) {\n    this.transform.addChild(mesh.transform);\n    this.meshes.push(mesh);\n  }\n\n  addCollider(newCollider) {}\n\n  render(shader) {\n    for (let i = 0; i < this.meshes.length; ++i) {\n      this.meshes[i].render(shader);\n    }\n  }\n\n}\n\nexport default GameObject;","map":{"version":3,"sources":["G:\\DOKUMENT\\Projekt\\React\\BlueBox\\client\\src\\js\\bluebox\\GameObject.js"],"names":["Transform","GameObject","constructor","name","nameTag","meshes","parent","transform","position","Vector3","matrix","rotation","scale","scaling","setNameTag","translate","val","setPosition","pos","setRotation","rot","setScale","addMesh","mesh","addChild","push","addCollider","newCollider","render","shader","i","length"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB,C,CAEA;AACA;AACA;AACA;;AAEA,MAAMC,UAAN,CAAiB;AACbC,EAAAA,WAAW,CAAEC,IAAF,EAAQ;AACf,SAAKC,OAAL,GAAeD,IAAf;AACA,SAAKE,MAAL,GAAc,EAAd;AACA,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,SAAL,GAAiB,IAAIP,SAAJ,EAAjB;AACH;;AAED,MAAIQ,QAAJ,GAAe;AACX,WAAO,IAAIC,OAAJ,CAAY,CAAC,KAAKF,SAAL,CAAeG,MAAf,CAAsB,EAAtB,CAAD,EAA4B,KAAKH,SAAL,CAAeG,MAAf,CAAsB,EAAtB,CAA5B,EAAuD,KAAKH,SAAL,CAAeG,MAAf,CAAsB,EAAtB,CAAvD,CAAZ,CAAP;AACH;;AAED,MAAIC,QAAJ,GAAe;AACX,WAAO,KAAKJ,SAAL,CAAeI,QAAtB;AACH;;AAED,MAAIC,KAAJ,GAAY;AACR,WAAO,KAAKL,SAAL,CAAeM,OAAtB;AACH;;AAEDC,EAAAA,UAAU,CAACX,IAAD,EAAO;AACb,SAAKC,OAAL,GAAeD,IAAf;AACH;;AAEDY,EAAAA,SAAS,CAAEC,GAAF,EAAO;AACZ,SAAKT,SAAL,CAAeQ,SAAf,CAAyBC,GAAzB;AACH;;AAEDC,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb,SAAKX,SAAL,CAAeU,WAAf,CAA2BC,GAA3B;AACH;;AAEDC,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb,SAAKb,SAAL,CAAeY,WAAf,CAA2BC,GAA3B;AACH;;AAEDC,EAAAA,QAAQ,CAACT,KAAD,EAAQ;AACZ,SAAKL,SAAL,CAAec,QAAf,CAAwBT,KAAxB;AACH;;AAEDU,EAAAA,OAAO,CAAEC,IAAF,EAAQ;AACX,SAAKhB,SAAL,CAAeiB,QAAf,CAAwBD,IAAI,CAAChB,SAA7B;AACA,SAAKF,MAAL,CAAYoB,IAAZ,CAAiBF,IAAjB;AACH;;AAEDG,EAAAA,WAAW,CAAEC,WAAF,EAAe,CAEzB;;AAEDC,EAAAA,MAAM,CAACC,MAAD,EAAS;AACX,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKzB,MAAL,CAAY0B,MAAhC,EAAwC,EAAED,CAA1C,EAA6C;AACzC,WAAKzB,MAAL,CAAYyB,CAAZ,EAAeF,MAAf,CAAsBC,MAAtB;AACH;AACJ;;AArDY;;AAwDjB,eAAe5B,UAAf","sourcesContent":["import Transform from './Transform';\r\n\r\n// TODO: Add a Script component for game object logic\r\n// TODO: Linear interpolation for transforms (translation and rotation)\r\n// TODO: Implement visible and interactable local coordinate system for game objects\r\n// TODO: Add a RigidBody component for handling velocity, acceleration and mass\r\n\r\nclass GameObject {\r\n    constructor (name) {\r\n        this.nameTag = name;\r\n        this.meshes = [];\r\n        this.parent = null;\r\n        this.transform = new Transform();\r\n    }\r\n\r\n    get position() {\r\n        return new Vector3([this.transform.matrix[12], this.transform.matrix[13], this.transform.matrix[14]]);\r\n    }\r\n\r\n    get rotation() {\r\n        return this.transform.rotation;\r\n    }\r\n\r\n    get scale() {\r\n        return this.transform.scaling;\r\n    }\r\n\r\n    setNameTag(name) {\r\n        this.nameTag = name;\r\n    }\r\n\r\n    translate (val) {\r\n        this.transform.translate(val);\r\n    }\r\n\r\n    setPosition(pos) {\r\n        this.transform.setPosition(pos);\r\n    }\r\n\r\n    setRotation(rot) {\r\n        this.transform.setRotation(rot);\r\n    }\r\n\r\n    setScale(scale) {\r\n        this.transform.setScale(scale);\r\n    }\r\n\r\n    addMesh (mesh) {\r\n        this.transform.addChild(mesh.transform);\r\n        this.meshes.push(mesh);\r\n    }\r\n\r\n    addCollider (newCollider) {\r\n\r\n    }\r\n\r\n    render(shader) {\r\n        for (let i = 0; i < this.meshes.length; ++i) {\r\n            this.meshes[i].render(shader);\r\n        }\r\n    }\r\n}\r\n\r\nexport default GameObject;"]},"metadata":{},"sourceType":"module"}