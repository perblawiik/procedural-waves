{"ast":null,"code":"import Transform from './Transform';\nimport Vector3 from './math/Vector3';\n\nclass GameObject {\n  constructor(name) {\n    this.nameTag = name;\n    this.childrenMeshes = [];\n    this.parent = null;\n    this.children = [];\n    this.transform = new Transform();\n  }\n\n  setNameTag(name) {\n    this.nameTag = name;\n  }\n\n  translate(val) {\n    this.transform.translate([val[0], val[1], val[2]]);\n\n    for (let i = 0; i < this.childrenMeshes.length; ++i) {\n      this.childrenMeshes[i].transform.setParent(this.transform);\n    }\n\n    this.localCoordinateSystemUI.setParentTransform(this.transform);\n    this.cubeUI.setParentTransform(this.transform);\n\n    if (this.children.length > 0) {\n      for (let j = 0; j < this.children.length; ++j) {\n        this.children[j].translate([val[0], val[1], val[2]]);\n      }\n    }\n  }\n\n  setPosition(pos) {\n    if (this.children.length > 0) {\n      for (let j = 0; j < this.children.length; ++j) {\n        let p = Vector3.subtract(this.transform.position, new Vector3(pos));\n        this.children[j].translate([p.x, p.y, p.z]);\n      }\n    }\n\n    this.transform.setPosition(pos);\n\n    for (let i = 0; i < this.childrenMeshes.length; ++i) {\n      this.childrenMeshes[i].transform.setParent(this.transform);\n    }\n  }\n\n  setRotation(rot) {\n    this.transform.setRotation(rot);\n\n    for (let i = 0; i < this.childrenMeshes.length; ++i) {\n      this.childrenMeshes[i].transform.setParent(this.transform);\n    }\n  }\n\n  setScale(scale) {\n    this.transform.setScale(scale);\n\n    for (let i = 0; i < this.childrenMeshes.length; ++i) {\n      this.childrenMeshes[i].transform.setParent(this.transform);\n    }\n  }\n\n  addMesh(mesh) {\n    mesh.transform.setParent(this.transform);\n    this.childrenMeshes.push(mesh);\n  }\n\n  addChild(gameObject) {\n    this.children.push(gameObject);\n  }\n\n  addCollider(newCollider) {}\n\n  render() {\n    for (let i = 0; i < this.childrenMeshes.length; ++i) {\n      this.childrenMeshes[i].render();\n    }\n  }\n\n}\n\nexport default GameObject;","map":{"version":3,"sources":["G:\\DOKUMENT\\Projekt\\React\\BlueBox\\client\\src\\js\\bluebox\\GameObject.js"],"names":["Transform","Vector3","GameObject","constructor","name","nameTag","childrenMeshes","parent","children","transform","setNameTag","translate","val","i","length","setParent","localCoordinateSystemUI","setParentTransform","cubeUI","j","setPosition","pos","p","subtract","position","x","y","z","setRotation","rot","setScale","scale","addMesh","mesh","push","addChild","gameObject","addCollider","newCollider","render"],"mappings":"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","sourcesContent":["import Transform from './Transform';\r\nimport Vector3 from './math/Vector3';\r\n\r\nclass GameObject {\r\n    constructor (name) {\r\n        this.nameTag = name;\r\n        this.childrenMeshes = [];\r\n        this.parent = null;\r\n        this.children = [];\r\n\r\n        this.transform = new Transform();\r\n    }\r\n\r\n    setNameTag(name) {\r\n        this.nameTag = name;\r\n    }\r\n\r\n    translate (val) {\r\n        this.transform.translate([val[0], val[1], val[2]]);\r\n\r\n        for (let i = 0; i < this.childrenMeshes.length; ++i) {\r\n            this.childrenMeshes[i].transform.setParent(this.transform);\r\n        }\r\n\r\n        this.localCoordinateSystemUI.setParentTransform(this.transform);\r\n        this.cubeUI.setParentTransform(this.transform);\r\n\r\n        if (this.children.length > 0) {\r\n            for (let j = 0; j < this.children.length; ++j) {\r\n                this.children[j].translate([val[0], val[1], val[2]]);\r\n            }\r\n        }\r\n    }\r\n\r\n    setPosition(pos) {\r\n        if (this.children.length > 0) {\r\n            for (let j = 0; j < this.children.length; ++j) {\r\n                let p = Vector3.subtract(this.transform.position, new Vector3(pos));\r\n                this.children[j].translate([p.x, p.y, p.z]);\r\n            }\r\n        }\r\n\r\n        this.transform.setPosition(pos);\r\n\r\n        for (let i = 0; i < this.childrenMeshes.length; ++i) {\r\n            this.childrenMeshes[i].transform.setParent(this.transform);\r\n        }\r\n    }\r\n\r\n    setRotation(rot) {\r\n        this.transform.setRotation(rot);\r\n\r\n        for (let i = 0; i < this.childrenMeshes.length; ++i) {\r\n            this.childrenMeshes[i].transform.setParent(this.transform);\r\n        }\r\n    }\r\n\r\n    setScale(scale) {\r\n        this.transform.setScale(scale);\r\n\r\n        for (let i = 0; i < this.childrenMeshes.length; ++i) {\r\n            this.childrenMeshes[i].transform.setParent(this.transform);\r\n        }\r\n    }\r\n\r\n    addMesh (mesh) {\r\n        mesh.transform.setParent(this.transform);\r\n        this.childrenMeshes.push(mesh);\r\n    }\r\n\r\n    addChild (gameObject) {\r\n        this.children.push(gameObject);\r\n    }\r\n\r\n    addCollider (newCollider) {\r\n\r\n    }\r\n\r\n    render() {\r\n        for (let i = 0; i < this.childrenMeshes.length; ++i) {\r\n            this.childrenMeshes[i].render();\r\n        }\r\n    }\r\n}\r\n\r\nexport default GameObject;"]},"metadata":{},"sourceType":"module"}