{"ast":null,"code":"import Vector3 from \"./math/Vector3\";\nimport RigidBody from \"./RigidBody\";\n\nclass Bullets {\n  constructor(bulletModel, bulletSpeed, bulletReach) {\n    this.activeBullets = [];\n    this.model = bulletModel;\n    this.speed = bulletSpeed;\n    this.reach = bulletReach;\n    this.gravityIsEnabled = false;\n    this.gravity = 9.82;\n    this.rigidBodies = [];\n  }\n\n  addBullet(origin, direction) {\n    this.activeBullets.push({\n      origin: new Vector3(origin),\n      position: origin,\n      direction: direction,\n      time: 0.0\n    });\n  }\n\n  calculateProjectileMotion(timeStep) {\n    let i = 0;\n\n    while (i < this.activeBullets.length) {\n      let t = this.activeBullets[i].time;\n      let x = this.activeBullets[i].origin.x + this.activeBullets[i].direction.x * this.speed * t;\n      let y = this.activeBullets[i].origin.y + this.activeBullets[i].direction.y * this.speed * t;\n      let z = this.activeBullets[i].origin.z + this.activeBullets[i].direction.z * this.speed * t; // Add gravity if it's enabled\n\n      if (this.gravityIsEnabled) {\n        y -= 0.5 * this.gravity * t * t;\n      }\n\n      if (Vector3.distance(new Vector3([x, y, z]), this.activeBullets[i].origin) < this.reach) {\n        // Save current position\n        this.activeBullets[i].position = [x, y, z];\n        this.activeBullets[i].time += timeStep;\n        ++i;\n      } else {\n        // Remove bullet if distance is too great\n        this.activeBullets.splice(i, 1);\n      }\n    }\n  }\n\n  enableGravity() {\n    this.gravityIsEnabled = true;\n  }\n\n  disableGravity() {\n    this.gravityIsEnabled = false;\n  }\n\n  update(timeStep) {\n    this.calculateProjectileMotion(timeStep);\n  }\n\n  render(shader) {\n    this.activeBullets.forEach(bulletInfo => {\n      // Set bullet position\n      this.model.setPosition(bulletInfo.position); // Draw bullet\n\n      this.model.render(shader);\n    });\n  }\n\n}\n\nexport default Bullets;","map":{"version":3,"sources":["G:\\DOKUMENT\\Projekt\\React\\BlueBox\\client\\src\\js\\bluebox\\Bullets.js"],"names":["Vector3","RigidBody","Bullets","constructor","bulletModel","bulletSpeed","bulletReach","activeBullets","model","speed","reach","gravityIsEnabled","gravity","rigidBodies","addBullet","origin","direction","push","position","time","calculateProjectileMotion","timeStep","i","length","t","x","y","z","distance","splice","enableGravity","disableGravity","update","render","shader","forEach","bulletInfo","setPosition"],"mappings":"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","sourcesContent":["import Vector3 from \"./math/Vector3\";\r\nimport RigidBody from \"./RigidBody\";\r\n\r\nclass Bullets {\r\n    constructor (bulletModel, bulletSpeed, bulletReach) {\r\n        this.activeBullets = [];\r\n        this.model = bulletModel;\r\n        this.speed = bulletSpeed;\r\n        this.reach = bulletReach;\r\n\r\n        this.gravityIsEnabled = false;\r\n        this.gravity = 9.82;\r\n\r\n        this.rigidBodies = [];\r\n    }\r\n\r\n\r\n    addBullet(origin, direction) {\r\n        this.activeBullets.push({\r\n            origin: new Vector3(origin),\r\n            position: origin,\r\n            direction: direction,\r\n            time: 0.0\r\n        });\r\n    }\r\n\r\n    calculateProjectileMotion(timeStep) {\r\n        let i = 0;\r\n        while(i < this.activeBullets.length) {\r\n            let t = this.activeBullets[i].time;\r\n            let x = this.activeBullets[i].origin.x + (this.activeBullets[i].direction.x * this.speed * t);\r\n            let y = this.activeBullets[i].origin.y + (this.activeBullets[i].direction.y * this.speed * t);\r\n            let z = this.activeBullets[i].origin.z + (this.activeBullets[i].direction.z * this.speed * t);\r\n\r\n            // Add gravity if it's enabled\r\n            if (this.gravityIsEnabled) {\r\n                y -= (0.5 * this.gravity * t * t);\r\n            }\r\n\r\n            if (Vector3.distance(new Vector3([x, y, z]), this.activeBullets[i].origin) < this.reach) {\r\n                // Save current position\r\n                this.activeBullets[i].position = [x, y, z];\r\n                this.activeBullets[i].time += timeStep;\r\n                ++i;\r\n            }\r\n            else { // Remove bullet if distance is too great\r\n                this.activeBullets.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    enableGravity() {\r\n        this.gravityIsEnabled = true;\r\n    }\r\n\r\n    disableGravity() {\r\n        this.gravityIsEnabled = false;\r\n    }\r\n\r\n    update(timeStep) {\r\n        this.calculateProjectileMotion(timeStep);\r\n    }\r\n\r\n    render(shader) {\r\n        this.activeBullets.forEach((bulletInfo) => {\r\n            // Set bullet position\r\n            this.model.setPosition(bulletInfo.position);\r\n            // Draw bullet\r\n            this.model.render(shader);\r\n        });\r\n    }\r\n}\r\n\r\nexport default Bullets;"]},"metadata":{},"sourceType":"module"}