{"ast":null,"code":"class MouseEventHandler {\n  constructor(sceneObjects) {\n    this.mouseInputReader = {\n      leftClickIsActive: false,\n      moveX: 0,\n      moveY: 0,\n      altKey: false,\n      ctrlKey: false,\n      shiftKey: false,\n      selectedGameObjectIndex: 0,\n      selectedGameObjectAxis: null,\n      moveGameObjectX: 0,\n      moveGameObjectY: 0\n    };\n    this.sceneObjects = sceneObjects;\n    let canvas2D = document.getElementById('text-canvas');\n    canvas2D.addEventListener(\"mousedown\", this.mouseDownEvent(event), false);\n    canvas2D.addEventListener(\"mouseup\", this.mouseUpEvent(event), false);\n    canvas2D.addEventListener(\"mouseleave\", this.mouseLeaveEvent(event), false);\n    canvas2D.addEventListener(\"mousemove\", this.mouseMove(event), false);\n  }\n\n  mouseDownEvent(event) {\n    let mouseInput = this.mouseInputReader;\n\n    switch (event.which) {\n      case MouseKey.LEFT_CLICK:\n        break;\n\n      case MouseKey.RIGHT_CLICK:\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  mouseUpEvent(event) {\n    let mouseInput = this.mouseInputReader;\n\n    switch (event.which) {\n      case MouseKey.LEFT_CLICK:\n        break;\n\n      case MouseKey.RIGHT_CLICK:\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  mouseLeaveEvent(event) {}\n\n  mouseMove(event) {}\n\n}\n\nexport default MouseEventHandler;","map":{"version":3,"sources":["G:\\DOKUMENT\\Projekt\\React\\BlueBox\\client\\src\\js\\bluebox\\MouseEventHandler.js"],"names":["MouseEventHandler","constructor","sceneObjects","mouseInputReader","leftClickIsActive","moveX","moveY","altKey","ctrlKey","shiftKey","selectedGameObjectIndex","selectedGameObjectAxis","moveGameObjectX","moveGameObjectY","canvas2D","document","getElementById","addEventListener","mouseDownEvent","event","mouseUpEvent","mouseLeaveEvent","mouseMove","mouseInput","which","MouseKey","LEFT_CLICK","RIGHT_CLICK"],"mappings":"AACA,MAAMA,iBAAN,CAAwB;AACpBC,EAAAA,WAAW,CAACC,YAAD,EAAe;AACtB,SAAKC,gBAAL,GAAwB;AACpBC,MAAAA,iBAAiB,EAAE,KADC;AAEpBC,MAAAA,KAAK,EAAE,CAFa;AAGpBC,MAAAA,KAAK,EAAE,CAHa;AAIpBC,MAAAA,MAAM,EAAE,KAJY;AAKpBC,MAAAA,OAAO,EAAE,KALW;AAMpBC,MAAAA,QAAQ,EAAE,KANU;AAOpBC,MAAAA,uBAAuB,EAAE,CAPL;AAQpBC,MAAAA,sBAAsB,EAAE,IARJ;AASpBC,MAAAA,eAAe,EAAE,CATG;AAUpBC,MAAAA,eAAe,EAAE;AAVG,KAAxB;AAaA,SAAKX,YAAL,GAAoBA,YAApB;AAEA,QAAIY,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAf;AACAF,IAAAA,QAAQ,CAACG,gBAAT,CAA0B,WAA1B,EAAuC,KAAKC,cAAL,CAAoBC,KAApB,CAAvC,EAAmE,KAAnE;AACAL,IAAAA,QAAQ,CAACG,gBAAT,CAA0B,SAA1B,EAAqC,KAAKG,YAAL,CAAkBD,KAAlB,CAArC,EAA+D,KAA/D;AACAL,IAAAA,QAAQ,CAACG,gBAAT,CAA0B,YAA1B,EAAwC,KAAKI,eAAL,CAAqBF,KAArB,CAAxC,EAAqE,KAArE;AACAL,IAAAA,QAAQ,CAACG,gBAAT,CAA0B,WAA1B,EAAuC,KAAKK,SAAL,CAAeH,KAAf,CAAvC,EAA8D,KAA9D;AACH;;AAEDD,EAAAA,cAAc,CAACC,KAAD,EAAQ;AAClB,QAAII,UAAU,GAAG,KAAKpB,gBAAtB;;AAEA,YAAOgB,KAAK,CAACK,KAAb;AACI,WAAKC,QAAQ,CAACC,UAAd;AACI;;AACJ,WAAKD,QAAQ,CAACE,WAAd;AACI;;AACJ;AACI;AANR;AAQH;;AAEDP,EAAAA,YAAY,CAACD,KAAD,EAAQ;AAChB,QAAII,UAAU,GAAG,KAAKpB,gBAAtB;;AAEA,YAAOgB,KAAK,CAACK,KAAb;AACI,WAAKC,QAAQ,CAACC,UAAd;AACI;;AACJ,WAAKD,QAAQ,CAACE,WAAd;AACI;;AACJ;AACI;AANR;AAQH;;AAEDN,EAAAA,eAAe,CAACF,KAAD,EAAQ,CAEtB;;AAEDG,EAAAA,SAAS,CAACH,KAAD,EAAQ,CAEhB;;AAxDmB;;AA4DxB,eAAenB,iBAAf","sourcesContent":["\r\nclass MouseEventHandler {\r\n    constructor(sceneObjects) {\r\n        this.mouseInputReader = {\r\n            leftClickIsActive: false,\r\n            moveX: 0,\r\n            moveY: 0,\r\n            altKey: false,\r\n            ctrlKey: false,\r\n            shiftKey: false,\r\n            selectedGameObjectIndex: 0,\r\n            selectedGameObjectAxis: null,\r\n            moveGameObjectX: 0,\r\n            moveGameObjectY: 0\r\n        };\r\n        \r\n        this.sceneObjects = sceneObjects;\r\n\r\n        let canvas2D = document.getElementById('text-canvas');\r\n        canvas2D.addEventListener(\"mousedown\", this.mouseDownEvent(event), false);\r\n        canvas2D.addEventListener(\"mouseup\", this.mouseUpEvent(event), false);\r\n        canvas2D.addEventListener(\"mouseleave\", this.mouseLeaveEvent(event), false);\r\n        canvas2D.addEventListener(\"mousemove\", this.mouseMove(event), false);\r\n    }\r\n\r\n    mouseDownEvent(event) {\r\n        let mouseInput = this.mouseInputReader;\r\n\r\n        switch(event.which) {\r\n            case MouseKey.LEFT_CLICK:\r\n                break;\r\n            case MouseKey.RIGHT_CLICK:\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    mouseUpEvent(event) {\r\n        let mouseInput = this.mouseInputReader;\r\n\r\n        switch(event.which) {\r\n            case MouseKey.LEFT_CLICK:\r\n                break;\r\n            case MouseKey.RIGHT_CLICK:\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    mouseLeaveEvent(event) {\r\n\r\n    }\r\n\r\n    mouseMove(event) {\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default MouseEventHandler;"]},"metadata":{},"sourceType":"module"}