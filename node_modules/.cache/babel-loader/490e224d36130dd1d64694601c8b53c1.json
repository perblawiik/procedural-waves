{"ast":null,"code":"import Matrix4 from './math/Matrix4';\nimport Vector3 from './math/Vector3';\n\nclass Transform {\n  constructor() {\n    this.position = new Vector3([0.0, 0.0, 0.0]);\n    this.rotation = new Vector3([0.0, 0.0, 0.0]);\n    this.scaling = new Vector3([1.0, 1.0, 1.0]);\n    this.matrix = Matrix4.identity();\n    this.parent = null;\n    this.children = [];\n    this.composeMatrix();\n  }\n\n  clone() {\n    let clone = new Transform();\n    clone.setPosition([this.position.x, this.position.y, this.position.z]);\n    clone.setScale([this.scaling.x, this.scaling.y, this.scaling.z]);\n    clone.setRotation([this.rotation.x, this.rotation.y, this.rotation.z]);\n    clone.setParent(this.parent);\n    return clone;\n  }\n\n  setScale(scale) {\n    this.scaling.set(scale);\n    this.composeMatrix();\n\n    for (let i = 0; i < this.children.length; ++i) {\n      this.children[i].setParent(this);\n    }\n  }\n\n  setPosition(position) {\n    this.position.set(position);\n    this.composeMatrix();\n\n    for (let i = 0; i < this.children.length; ++i) {\n      this.children[i].setParent(this);\n    }\n  }\n\n  setRotation(rotation) {\n    this.rotation.set(rotation);\n    this.composeMatrix();\n\n    for (let i = 0; i < this.children.length; ++i) {\n      this.children[i].setParent(this);\n    }\n  }\n\n  translate(val) {\n    let rightVec = new Vector3([this.matrix[0] * val[0], this.matrix[4] * val[0], this.matrix[8] * val[0]]);\n    let upVec = new Vector3([this.matrix[1] * val[1], this.matrix[5] * val[1], this.matrix[9] * val[1]]);\n    let forwardVec = new Vector3([this.matrix[2] * val[2], this.matrix[6] * val[2], this.matrix[10] * val[2]]);\n    this.setPosition([this.position.x + rightVec.x / this.scaling.x - upVec.x / this.scaling.x - forwardVec.x / this.scaling.x, this.position.y - rightVec.y / this.scaling.y + upVec.y / this.scaling.y - forwardVec.y / this.scaling.y, this.position.z - rightVec.z / this.scaling.z - upVec.z / this.scaling.z + forwardVec.z / this.scaling.z]);\n\n    for (let i = 0; i < this.children.length; ++i) {\n      this.children[i].setParent(this);\n    }\n  }\n\n  setParent(parentTransform) {\n    this.parent = parentTransform;\n    this.composeMatrix();\n  }\n\n  addChild(child) {\n    this.children.push(child);\n  }\n\n  invert() {\n    return Matrix4.invert(this.matrix, this.matrix);\n  }\n\n  composeMatrix() {\n    let scaleMatrix = Matrix4.scaling(this.scaling.x, this.scaling.y, this.scaling.z);\n    let rotationMatrix = Matrix4.rotateZ(Matrix4.identity(), this.rotation.z * Math.PI / 180);\n    rotationMatrix = Matrix4.rotateX(rotationMatrix, this.rotation.x * Math.PI / 180);\n    rotationMatrix = Matrix4.rotateY(rotationMatrix, this.rotation.y * Math.PI / 180);\n    let translationMatrix = Matrix4.translation(this.position.x, this.position.y, this.position.z);\n    this.matrix = Matrix4.multiply(rotationMatrix, scaleMatrix);\n    this.matrix = Matrix4.multiply(translationMatrix, this.matrix);\n\n    if (this.parent !== null) {\n      this.matrix = Matrix4.multiply(this.parent.matrix, this.matrix);\n    }\n  }\n\n}\n\nexport default Transform;","map":{"version":3,"sources":["G:\\DOKUMENT\\Projekt\\React\\BlueBox\\client\\src\\js\\bluebox\\Transform.js"],"names":["Matrix4","Vector3","Transform","constructor","position","rotation","scaling","matrix","identity","parent","children","composeMatrix","clone","setPosition","x","y","z","setScale","setRotation","setParent","scale","set","i","length","translate","val","rightVec","upVec","forwardVec","parentTransform","addChild","child","push","invert","scaleMatrix","rotationMatrix","rotateZ","Math","PI","rotateX","rotateY","translationMatrix","translation","multiply"],"mappings":"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","sourcesContent":["import Matrix4 from './math/Matrix4';\r\nimport Vector3 from './math/Vector3';\r\n\r\nclass Transform {\r\n    constructor() {\r\n        this.position = new Vector3([0.0, 0.0, 0.0]);\r\n        this.rotation = new Vector3([0.0, 0.0, 0.0]);\r\n        this.scaling = new Vector3([1.0, 1.0, 1.0]);\r\n\r\n        this.matrix = Matrix4.identity();\r\n        this.parent = null;\r\n        this.children = [];\r\n        this.composeMatrix();\r\n    }\r\n\r\n    clone() {\r\n        let clone = new Transform();\r\n        clone.setPosition([this.position.x, this.position.y, this.position.z]);\r\n        clone.setScale([this.scaling.x, this.scaling.y, this.scaling.z]);\r\n        clone.setRotation([this.rotation.x, this.rotation.y, this.rotation.z]);\r\n        clone.setParent(this.parent);\r\n        return clone;\r\n    }\r\n\r\n    setScale(scale) {\r\n        this.scaling.set(scale);\r\n        this.composeMatrix();\r\n\r\n        for (let i = 0; i < this.children.length; ++i) {\r\n            this.children[i].setParent(this);\r\n        }\r\n    }\r\n\r\n    setPosition(position) {\r\n        this.position.set(position);\r\n        this.composeMatrix();\r\n\r\n        for (let i = 0; i < this.children.length; ++i) {\r\n            this.children[i].setParent(this);\r\n        }\r\n    }\r\n\r\n    setRotation (rotation) {\r\n        this.rotation.set(rotation);\r\n        this.composeMatrix();\r\n\r\n        for (let i = 0; i < this.children.length; ++i) {\r\n            this.children[i].setParent(this);\r\n        }\r\n    }\r\n\r\n    translate(val) {\r\n        let rightVec = new Vector3([this.matrix[0]*val[0], this.matrix[4]*val[0], this.matrix[8]*val[0]]);\r\n        let upVec = new Vector3([this.matrix[1]*val[1], this.matrix[5]*val[1], this.matrix[9]*val[1]]);\r\n        let forwardVec = new Vector3([this.matrix[2]*val[2], this.matrix[6]*val[2], this.matrix[10]*val[2]]);\r\n\r\n        this.setPosition([\r\n            this.position.x + rightVec.x/this.scaling.x - upVec.x/this.scaling.x - forwardVec.x/this.scaling.x,\r\n            this.position.y - rightVec.y/this.scaling.y + upVec.y/this.scaling.y - forwardVec.y/this.scaling.y,\r\n            this.position.z - rightVec.z/this.scaling.z - upVec.z/this.scaling.z + forwardVec.z/this.scaling.z,\r\n        ]);\r\n\r\n        for (let i = 0; i < this.children.length; ++i) {\r\n            this.children[i].setParent(this);\r\n        }\r\n    }\r\n\r\n    setParent(parentTransform) {\r\n        this.parent = parentTransform;\r\n        this.composeMatrix();\r\n    }\r\n\r\n    addChild(child) {\r\n        this.children.push(child);\r\n    }\r\n\r\n    invert () {\r\n        return Matrix4.invert(this.matrix, this.matrix);\r\n    }\r\n\r\n    composeMatrix () {\r\n        let scaleMatrix = Matrix4.scaling(this.scaling.x, this.scaling.y, this.scaling.z);\r\n        let rotationMatrix = Matrix4.rotateZ(Matrix4.identity(), (this.rotation.z*Math.PI/180));\r\n        rotationMatrix = Matrix4.rotateX(rotationMatrix, (this.rotation.x*Math.PI/180));\r\n        rotationMatrix = Matrix4.rotateY(rotationMatrix, (this.rotation.y*Math.PI/180));\r\n        let translationMatrix = Matrix4.translation(this.position.x, this.position.y, this.position.z);\r\n\r\n        this.matrix = Matrix4.multiply(rotationMatrix, scaleMatrix);\r\n        this.matrix = Matrix4.multiply(translationMatrix, this.matrix);\r\n\r\n        if (this.parent !== null) {\r\n            this.matrix = Matrix4.multiply(this.parent.matrix, this.matrix);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Transform;"]},"metadata":{},"sourceType":"module"}